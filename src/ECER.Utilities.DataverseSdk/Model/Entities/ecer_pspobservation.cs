#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECER.Utilities.DataverseSdk.Model
{
	
	
	/// <summary>
	/// Status of the PSP Observation
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_pspobservation_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the PSP Observation
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_pspobservation_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ecer_pspobservation")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public partial class ecer_pspobservation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ecer_pspobservation entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ecer_Accesstoinstructor = "ecer_accesstoinstructor";
			public const string ecer_AccompanyVerbalPresentation = "ecer_accompanyverbalpresentation";
			public const string ecer_AccompanyVerbalPresentationComment = "ecer_accompanyverbalpresentationcomment";
			public const string ecer_accompanyverbalpresentationName = "ecer_accompanyverbalpresentationname";
			public const string ecer_Active = "ecer_active";
			public const string ecer_ActiveComments = "ecer_activecomments";
			public const string ecer_ActivelyParticipateActivities = "ecer_activelyparticipateactivities";
			public const string ecer_ActivelyParticipateActivitiesComment = "ecer_activelyparticipateactivitiescomment";
			public const string ecer_activelyparticipateactivitiesName = "ecer_activelyparticipateactivitiesname";
			public const string ecer_activeName = "ecer_activename";
			public const string ecer_AuralListeningMusicStories = "ecer_aurallisteningmusicstories";
			public const string ecer_aurallisteningmusicstoriesComments = "ecer_aurallisteningmusicstoriescomments";
			public const string ecer_aurallisteningmusicstoriesName = "ecer_aurallisteningmusicstoriesname";
			public const string ecer_Classoutlineprovided = "ecer_classoutlineprovided";
			public const string ecer_ClassoutlineprovidedComments = "ecer_classoutlineprovidedcomments";
			public const string ecer_classoutlineprovidedName = "ecer_classoutlineprovidedname";
			public const string ecer_Classroomagreementrules = "ecer_classroomagreementrules";
			public const string ecer_Collaborative = "ecer_collaborative";
			public const string ecer_CollaborativeComments = "ecer_collaborativecomments";
			public const string ecer_collaborativeName = "ecer_collaborativename";
			public const string ecer_ComfortableAskingQuestions = "ecer_comfortableaskingquestions";
			public const string ecer_ComfortableAskingQuestionsComment = "ecer_comfortableaskingquestionscomment";
			public const string ecer_comfortableaskingquestionsName = "ecer_comfortableaskingquestionsname";
			public const string ecer_ConnectCourseMaterial = "ecer_connectcoursematerial";
			public const string ecer_ConnectCourseMaterialComment = "ecer_connectcoursematerialcomment";
			public const string ecer_connectcoursematerialName = "ecer_connectcoursematerialname";
			public const string ecer_Course = "ecer_course";
			public const string ecer_Date = "ecer_date";
			public const string ecer_Discussion = "ecer_discussion";
			public const string ecer_DiscussionComments = "ecer_discussioncomments";
			public const string ecer_discussionName = "ecer_discussionname";
			public const string ecer_Diversityofmaterials = "ecer_diversityofmaterials";
			public const string ecer_DiversityofmaterialsComments = "ecer_diversityofmaterialscomments";
			public const string ecer_diversityofmaterialsName = "ecer_diversityofmaterialsname";
			public const string ecer_facultymemberbeingobserved = "ecer_facultymemberbeingobserved";
			public const string ecer_Flexible = "ecer_flexible";
			public const string ecer_FlexibleAutonomyegResearchArticle = "ecer_flexibleautonomyegresearcharticle";
			public const string ecer_flexibleautonomyegresearcharticleName = "ecer_flexibleautonomyegresearcharticlename";
			public const string ecer_Instructorcommunicatespurposeclearly = "ecer_instructorcommunicatespurposeclearly";
			public const string ecer_InstructorcommunicatespurposeclearlyComment = "ecer_instructorcommunicatespurposeclearlycomment";
			public const string ecer_instructorcommunicatespurposeclearlyName = "ecer_instructorcommunicatespurposeclearlyname";
			public const string ecer_InstructorName = "ecer_instructorname";
			public const string ecer_Learnercentred = "ecer_learnercentred";
			public const string ecer_LearnerCentredComments = "ecer_learnercentredcomments";
			public const string ecer_learnercentredName = "ecer_learnercentredname";
			public const string ecer_LearningCommunities = "ecer_learningcommunities";
			public const string ecer_LearningcommunitiesComments = "ecer_learningcommunitiescomments";
			public const string ecer_learningcommunitiesName = "ecer_learningcommunitiesname";
			public const string ecer_Light = "ecer_light";
			public const string ecer_LinksNewMaterial = "ecer_linksnewmaterial";
			public const string ecer_LinksNewMaterialComment = "ecer_linksnewmaterialcomment";
			public const string ecer_linksnewmaterialName = "ecer_linksnewmaterialname";
			public const string ecer_LogicalLogicReasonSystems = "ecer_logicallogicreasonsystems";
			public const string ecer_logicallogicreasonsystemsComments = "ecer_logicallogicreasonsystemscomments";
			public const string ecer_logicallogicreasonsystemsName = "ecer_logicallogicreasonsystemsname";
			public const string ecer_Name = "ecer_name";
			public const string ecer_NarrativeComments = "ecer_narrativecomments";
			public const string ecer_Narrativestorytelling = "ecer_narrativestorytelling";
			public const string ecer_narrativestorytellingName = "ecer_narrativestorytellingname";
			public const string ecer_ObservationType = "ecer_observationtype";
			public const string ecer_observationtypeName = "ecer_observationtypename";
			public const string ecer_Observer = "ecer_observer";
			public const string ecer_PhysicalTouchPlay = "ecer_physicaltouchplay";
			public const string ecer_physicaltouchplayComments = "ecer_physicaltouchplaycomments";
			public const string ecer_physicaltouchplayName = "ecer_physicaltouchplayname";
			public const string ecer_postsecondaryinstitutionid = "ecer_postsecondaryinstitutionid";
			public const string ecer_postsecondaryinstitutionidName = "ecer_postsecondaryinstitutionidname";
			public const string ecer_PowerPointandorothertechnologyused = "ecer_powerpointandorothertechnologyused";
			public const string ecer_PowerPointandorothertechnologyusedComments = "ecer_powerpointandorothertechnologyusedcomments";
			public const string ecer_powerpointandorothertechnologyusedName = "ecer_powerpointandorothertechnologyusedname";
			public const string ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute = "ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute";
			public const string ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit = "ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit";
			public const string ecer_pspobservationId = "ecer_pspobservationid";
			public const string Id = "ecer_pspobservationid";
			public const string ecer_RequiresStudentsActive = "ecer_requiresstudentsactive";
			public const string ecer_RequiresStudentsActiveComment = "ecer_requiresstudentsactivecomment";
			public const string ecer_requiresstudentsactiveName = "ecer_requiresstudentsactivename";
			public const string ecer_Selfdirected = "ecer_selfdirected";
			public const string ecer_SelfdirectedComments = "ecer_selfdirectedcomments";
			public const string ecer_selfdirectedName = "ecer_selfdirectedname";
			public const string ecer_sitevisitid = "ecer_sitevisitid";
			public const string ecer_sitevisitidName = "ecer_sitevisitidname";
			public const string ecer_SocialGroupWorkActivities = "ecer_socialgroupworkactivities";
			public const string ecer_socialgroupworkactivitiesComments = "ecer_socialgroupworkactivitiescomments";
			public const string ecer_socialgroupworkactivitiesName = "ecer_socialgroupworkactivitiesname";
			public const string ecer_SolitarySelfDirectedLearning = "ecer_solitaryselfdirectedlearning";
			public const string ecer_solitaryselfdirectedlearningComments = "ecer_solitaryselfdirectedlearningcomments";
			public const string ecer_solitaryselfdirectedlearningName = "ecer_solitaryselfdirectedlearningname";
			public const string ecer_Someinstructorledinformation = "ecer_someinstructorledinformation";
			public const string ecer_SomeinstructorledinformationComments = "ecer_someinstructorledinformationcomments";
			public const string ecer_someinstructorledinformationName = "ecer_someinstructorledinformationname";
			public const string ecer_SoundAcoustics = "ecer_soundacoustics";
			public const string ecer_Space = "ecer_space";
			public const string ecer_Studentengagementdiscussionandinteractions = "ecer_studentengagementdiscussionandinteractions";
			public const string ecer_StudentInteraction = "ecer_studentinteraction";
			public const string ecer_StudentInteractionComment = "ecer_studentinteractioncomment";
			public const string ecer_studentinteractionName = "ecer_studentinteractionname";
			public const string ecer_StudentsEngaged = "ecer_studentsengaged";
			public const string ecer_StudentsEngagedComment = "ecer_studentsengagedcomment";
			public const string ecer_studentsengagedName = "ecer_studentsengagedname";
			public const string ecer_ThinkAnalytically = "ecer_thinkanalytically";
			public const string ecer_ThinkAnalyticallyComment = "ecer_thinkanalyticallycomment";
			public const string ecer_thinkanalyticallyName = "ecer_thinkanalyticallyname";
			public const string ecer_UnderstandCourseMaterial = "ecer_understandcoursematerial";
			public const string ecer_UnderstandCourseMaterialComment = "ecer_understandcoursematerialcomment";
			public const string ecer_understandcoursematerialName = "ecer_understandcoursematerialname";
			public const string ecer_Usesconcreteexamples = "ecer_usesconcreteexamples";
			public const string ecer_UsesConcreteExamplesComment = "ecer_usesconcreteexamplescomment";
			public const string ecer_usesconcreteexamplesName = "ecer_usesconcreteexamplesname";
			public const string ecer_VerbalDiscussion = "ecer_verbaldiscussion";
			public const string ecer_verbaldiscussionComments = "ecer_verbaldiscussioncomments";
			public const string ecer_verbaldiscussionName = "ecer_verbaldiscussionname";
			public const string ecer_VisualTVImages = "ecer_visualtvimages";
			public const string ecer_visualtvimagesComments = "ecer_visualtvimagescomments";
			public const string ecer_visualtvimagesName = "ecer_visualtvimagesname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string StateCode = "statecode";
			public const string statecodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_pspobservation(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_pspobservation(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_pspobservation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_pspobservation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ecer_pspobservationid";
		
		public const string PrimaryNameAttribute = "ecer_name";
		
		public const string EntitySchemaName = "ecer_pspobservation";
		
		public const string EntityLogicalName = "ecer_pspobservation";
		
		public const string EntityLogicalCollectionName = "ecer_pspobservations";
		
		public const string EntitySetName = "ecer_pspobservations";
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_accesstoinstructor")]
		public string ecer_Accesstoinstructor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_accesstoinstructor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_accesstoinstructor", value);
			}
		}
		
		/// <summary>
		/// Instructor uses visuals and handouts where appropriate to accompany verbal presentation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_accompanyverbalpresentation")]
		public virtual ecer_YesNoNull? ecer_AccompanyVerbalPresentation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_accompanyverbalpresentation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_accompanyverbalpresentation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_accompanyverbalpresentationcomment")]
		public string ecer_AccompanyVerbalPresentationComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_accompanyverbalpresentationcomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_accompanyverbalpresentationcomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_accompanyverbalpresentationname")]
		public string ecer_accompanyverbalpresentationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_accompanyverbalpresentation"))
				{
					return this.FormattedValues["ecer_accompanyverbalpresentation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// (apply own background, Think-pair-share, scenarios)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_active")]
		public virtual ecer_YesNoNull? ecer_Active
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_active")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_active", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_activecomments")]
		public string ecer_ActiveComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_activecomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_activecomments", value);
			}
		}
		
		/// <summary>
		/// Students actively participate in class activities and discussion
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_activelyparticipateactivities")]
		public virtual ecer_YesNoNull? ecer_ActivelyParticipateActivities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_activelyparticipateactivities")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_activelyparticipateactivities", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_activelyparticipateactivitiescomment")]
		public string ecer_ActivelyParticipateActivitiesComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_activelyparticipateactivitiescomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_activelyparticipateactivitiescomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_activelyparticipateactivitiesname")]
		public string ecer_activelyparticipateactivitiesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_activelyparticipateactivities"))
				{
					return this.FormattedValues["ecer_activelyparticipateactivities"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_activename")]
		public string ecer_activeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_active"))
				{
					return this.FormattedValues["ecer_active"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_aurallisteningmusicstories")]
		public virtual ecer_YesNoNull? ecer_AuralListeningMusicStories
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_aurallisteningmusicstories")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_aurallisteningmusicstories", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_aurallisteningmusicstoriescomments")]
		public string ecer_aurallisteningmusicstoriesComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_aurallisteningmusicstoriescomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_aurallisteningmusicstoriescomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_aurallisteningmusicstoriesname")]
		public string ecer_aurallisteningmusicstoriesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_aurallisteningmusicstories"))
				{
					return this.FormattedValues["ecer_aurallisteningmusicstories"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_classoutlineprovided")]
		public virtual ecer_YesNoNull? ecer_Classoutlineprovided
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_classoutlineprovided")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_classoutlineprovided", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_classoutlineprovidedcomments")]
		public string ecer_ClassoutlineprovidedComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_classoutlineprovidedcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_classoutlineprovidedcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_classoutlineprovidedname")]
		public string ecer_classoutlineprovidedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_classoutlineprovided"))
				{
					return this.FormattedValues["ecer_classoutlineprovided"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_classroomagreementrules")]
		public string ecer_Classroomagreementrules
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_classroomagreementrules");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_classroomagreementrules", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_collaborative")]
		public virtual ecer_YesNoNull? ecer_Collaborative
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_collaborative")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_collaborative", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_collaborativecomments")]
		public string ecer_CollaborativeComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_collaborativecomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_collaborativecomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_collaborativename")]
		public string ecer_collaborativeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_collaborative"))
				{
					return this.FormattedValues["ecer_collaborative"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Students are comfortable asking questions
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_comfortableaskingquestions")]
		public virtual ecer_YesNoNull? ecer_ComfortableAskingQuestions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_comfortableaskingquestions")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_comfortableaskingquestions", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_comfortableaskingquestionscomment")]
		public string ecer_ComfortableAskingQuestionsComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_comfortableaskingquestionscomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_comfortableaskingquestionscomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_comfortableaskingquestionsname")]
		public string ecer_comfortableaskingquestionsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_comfortableaskingquestions"))
				{
					return this.FormattedValues["ecer_comfortableaskingquestions"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Students are able to connect course material to other relevant topics
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_connectcoursematerial")]
		public virtual ecer_YesNoNull? ecer_ConnectCourseMaterial
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_connectcoursematerial")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_connectcoursematerial", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_connectcoursematerialcomment")]
		public string ecer_ConnectCourseMaterialComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_connectcoursematerialcomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_connectcoursematerialcomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_connectcoursematerialname")]
		public string ecer_connectcoursematerialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_connectcoursematerial"))
				{
					return this.FormattedValues["ecer_connectcoursematerial"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_course")]
		public string ecer_Course
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_course");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_course", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_date")]
		public System.Nullable<System.DateTime> ecer_Date
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_date");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_date", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_discussion")]
		public virtual ecer_YesNoNull? ecer_Discussion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_discussion")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_discussion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_discussioncomments")]
		public string ecer_DiscussionComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_discussioncomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_discussioncomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_discussionname")]
		public string ecer_discussionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_discussion"))
				{
					return this.FormattedValues["ecer_discussion"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_diversityofmaterials")]
		public virtual ecer_YesNoNull? ecer_Diversityofmaterials
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_diversityofmaterials")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_diversityofmaterials", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_diversityofmaterialscomments")]
		public string ecer_DiversityofmaterialsComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_diversityofmaterialscomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_diversityofmaterialscomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_diversityofmaterialsname")]
		public string ecer_diversityofmaterialsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_diversityofmaterials"))
				{
					return this.FormattedValues["ecer_diversityofmaterials"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_facultymemberbeingobserved")]
		public string ecer_facultymemberbeingobserved
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_facultymemberbeingobserved");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_facultymemberbeingobserved", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_flexible")]
		public string ecer_Flexible
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_flexible");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_flexible", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_flexibleautonomyegresearcharticle")]
		public virtual ecer_YesNoNull? ecer_FlexibleAutonomyegResearchArticle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_flexibleautonomyegresearcharticle")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_flexibleautonomyegresearcharticle", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_flexibleautonomyegresearcharticlename")]
		public string ecer_flexibleautonomyegresearcharticleName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_flexibleautonomyegresearcharticle"))
				{
					return this.FormattedValues["ecer_flexibleautonomyegresearcharticle"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Instructor clearly communicates the purpose of class session and instructional activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_instructorcommunicatespurposeclearly")]
		public virtual ecer_YesNoNull? ecer_Instructorcommunicatespurposeclearly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_instructorcommunicatespurposeclearly")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_instructorcommunicatespurposeclearly", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Instructor clearly communicates 
///the purpose of class session and 
///instructional activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_instructorcommunicatespurposeclearlycomment")]
		public string ecer_InstructorcommunicatespurposeclearlyComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_instructorcommunicatespurposeclearlycomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_instructorcommunicatespurposeclearlycomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_instructorcommunicatespurposeclearlyname")]
		public string ecer_instructorcommunicatespurposeclearlyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_instructorcommunicatespurposeclearly"))
				{
					return this.FormattedValues["ecer_instructorcommunicatespurposeclearly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_instructorname")]
		public string ecer_InstructorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_instructorname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_instructorname", value);
			}
		}
		
		/// <summary>
		/// (lots of discussion, asked student needs)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learnercentred")]
		public virtual ecer_YesNoNull? ecer_Learnercentred
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_learnercentred")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_learnercentred", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learnercentredcomments")]
		public string ecer_LearnerCentredComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_learnercentredcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_learnercentredcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learnercentredname")]
		public string ecer_learnercentredName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_learnercentred"))
				{
					return this.FormattedValues["ecer_learnercentred"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learningcommunities")]
		public virtual ecer_YesNoNull? ecer_LearningCommunities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_learningcommunities")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_learningcommunities", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learningcommunitiescomments")]
		public string ecer_LearningcommunitiesComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_learningcommunitiescomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_learningcommunitiescomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_learningcommunitiesname")]
		public string ecer_learningcommunitiesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_learningcommunities"))
				{
					return this.FormattedValues["ecer_learningcommunities"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_light")]
		public string ecer_Light
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_light");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_light", value);
			}
		}
		
		/// <summary>
		/// Instructor links new material to previously learned concepts
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_linksnewmaterial")]
		public virtual ecer_YesNoNull? ecer_LinksNewMaterial
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_linksnewmaterial")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_linksnewmaterial", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_linksnewmaterialcomment")]
		public string ecer_LinksNewMaterialComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_linksnewmaterialcomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_linksnewmaterialcomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_linksnewmaterialname")]
		public string ecer_linksnewmaterialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_linksnewmaterial"))
				{
					return this.FormattedValues["ecer_linksnewmaterial"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_logicallogicreasonsystems")]
		public virtual ecer_YesNoNull? ecer_LogicalLogicReasonSystems
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_logicallogicreasonsystems")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_logicallogicreasonsystems", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_logicallogicreasonsystemscomments")]
		public string ecer_logicallogicreasonsystemsComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_logicallogicreasonsystemscomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_logicallogicreasonsystemscomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_logicallogicreasonsystemsname")]
		public string ecer_logicallogicreasonsystemsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_logicallogicreasonsystems"))
				{
					return this.FormattedValues["ecer_logicallogicreasonsystems"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_name")]
		public string ecer_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_narrativecomments")]
		public string ecer_NarrativeComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_narrativecomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_narrativecomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_narrativestorytelling")]
		public virtual ecer_YesNoNull? ecer_Narrativestorytelling
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_narrativestorytelling")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_narrativestorytelling", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_narrativestorytellingname")]
		public string ecer_narrativestorytellingName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_narrativestorytelling"))
				{
					return this.FormattedValues["ecer_narrativestorytelling"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_observationtype")]
		public virtual ecer_Observations? ecer_ObservationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Observations?)(EntityOptionSetEnum.GetEnum(this, "ecer_observationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_observationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_observationtypename")]
		public string ecer_observationtypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_observationtype"))
				{
					return this.FormattedValues["ecer_observationtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_observer")]
		public string ecer_Observer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_observer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_observer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_physicaltouchplay")]
		public virtual ecer_YesNoNull? ecer_PhysicalTouchPlay
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_physicaltouchplay")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_physicaltouchplay", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_physicaltouchplaycomments")]
		public string ecer_physicaltouchplayComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_physicaltouchplaycomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_physicaltouchplaycomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_physicaltouchplayname")]
		public string ecer_physicaltouchplayName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_physicaltouchplay"))
				{
					return this.FormattedValues["ecer_physicaltouchplay"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_postsecondaryinstitutionid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_postsecondaryinstitutionid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_postsecondaryinstitutionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_postsecondaryinstitutionid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_postsecondaryinstitutionidname")]
		public string ecer_postsecondaryinstitutionidName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_postsecondaryinstitutionid"))
				{
					return this.FormattedValues["ecer_postsecondaryinstitutionid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_powerpointandorothertechnologyused")]
		public virtual ecer_YesNoNull? ecer_PowerPointandorothertechnologyused
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_powerpointandorothertechnologyused")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_powerpointandorothertechnologyused", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_powerpointandorothertechnologyusedcomments")]
		public string ecer_PowerPointandorothertechnologyusedComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_powerpointandorothertechnologyusedcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_powerpointandorothertechnologyusedcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_powerpointandorothertechnologyusedname")]
		public string ecer_powerpointandorothertechnologyusedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_powerpointandorothertechnologyused"))
				{
					return this.FormattedValues["ecer_powerpointandorothertechnologyused"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_pspobservationid")]
		public System.Nullable<System.Guid> ecer_pspobservationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ecer_pspobservationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_pspobservationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_pspobservationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ecer_pspobservationId = value;
			}
		}
		
		/// <summary>
		/// Instructor requires students to be active (e.g., completing a task, applying concepts, or engaging in discussion instead of passively listening).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_requiresstudentsactive")]
		public virtual ecer_YesNoNull? ecer_RequiresStudentsActive
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_requiresstudentsactive")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_requiresstudentsactive", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_requiresstudentsactivecomment")]
		public string ecer_RequiresStudentsActiveComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_requiresstudentsactivecomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_requiresstudentsactivecomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_requiresstudentsactivename")]
		public string ecer_requiresstudentsactiveName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_requiresstudentsactive"))
				{
					return this.FormattedValues["ecer_requiresstudentsactive"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// (teacher acts as a facilitator rather than leader)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_selfdirected")]
		public virtual ecer_YesNoNull? ecer_Selfdirected
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_selfdirected")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_selfdirected", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_selfdirectedcomments")]
		public string ecer_SelfdirectedComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_selfdirectedcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_selfdirectedcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_selfdirectedname")]
		public string ecer_selfdirectedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_selfdirected"))
				{
					return this.FormattedValues["ecer_selfdirected"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sitevisitid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_sitevisitid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_sitevisitid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sitevisitid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sitevisitidname")]
		public string ecer_sitevisitidName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sitevisitid"))
				{
					return this.FormattedValues["ecer_sitevisitid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_socialgroupworkactivities")]
		public virtual ecer_YesNoNull? ecer_SocialGroupWorkActivities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_socialgroupworkactivities")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_socialgroupworkactivities", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_socialgroupworkactivitiescomments")]
		public string ecer_socialgroupworkactivitiesComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_socialgroupworkactivitiescomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_socialgroupworkactivitiescomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_socialgroupworkactivitiesname")]
		public string ecer_socialgroupworkactivitiesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_socialgroupworkactivities"))
				{
					return this.FormattedValues["ecer_socialgroupworkactivities"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_solitaryselfdirectedlearning")]
		public virtual ecer_YesNoNull? ecer_SolitarySelfDirectedLearning
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_solitaryselfdirectedlearning")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_solitaryselfdirectedlearning", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_solitaryselfdirectedlearningcomments")]
		public string ecer_solitaryselfdirectedlearningComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_solitaryselfdirectedlearningcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_solitaryselfdirectedlearningcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_solitaryselfdirectedlearningname")]
		public string ecer_solitaryselfdirectedlearningName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_solitaryselfdirectedlearning"))
				{
					return this.FormattedValues["ecer_solitaryselfdirectedlearning"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_someinstructorledinformation")]
		public virtual ecer_YesNoNull? ecer_Someinstructorledinformation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_someinstructorledinformation")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_someinstructorledinformation", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_someinstructorledinformationcomments")]
		public string ecer_SomeinstructorledinformationComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_someinstructorledinformationcomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_someinstructorledinformationcomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_someinstructorledinformationname")]
		public string ecer_someinstructorledinformationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_someinstructorledinformation"))
				{
					return this.FormattedValues["ecer_someinstructorledinformation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_soundacoustics")]
		public string ecer_SoundAcoustics
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_soundacoustics");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_soundacoustics", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_space")]
		public string ecer_Space
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_space");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_space", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentengagementdiscussionandinteractions")]
		public string ecer_Studentengagementdiscussionandinteractions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_studentengagementdiscussionandinteractions");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_studentengagementdiscussionandinteractions", value);
			}
		}
		
		/// <summary>
		/// Instructor fosters student-to-student interaction.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentinteraction")]
		public virtual ecer_YesNoNull? ecer_StudentInteraction
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_studentinteraction")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_studentinteraction", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentinteractioncomment")]
		public string ecer_StudentInteractionComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_studentinteractioncomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_studentinteractioncomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentinteractionname")]
		public string ecer_studentinteractionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_studentinteraction"))
				{
					return this.FormattedValues["ecer_studentinteraction"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Instructor uses a variety of activities to ensure all students are engaged.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentsengaged")]
		public virtual ecer_YesNoNull? ecer_StudentsEngaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_studentsengaged")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_studentsengaged", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentsengagedcomment")]
		public string ecer_StudentsEngagedComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_studentsengagedcomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_studentsengagedcomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_studentsengagedname")]
		public string ecer_studentsengagedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_studentsengaged"))
				{
					return this.FormattedValues["ecer_studentsengaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Instructor challenges students to think analytically
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_thinkanalytically")]
		public virtual ecer_YesNoNull? ecer_ThinkAnalytically
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_thinkanalytically")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_thinkanalytically", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_thinkanalyticallycomment")]
		public string ecer_ThinkAnalyticallyComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_thinkanalyticallycomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_thinkanalyticallycomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_thinkanalyticallyname")]
		public string ecer_thinkanalyticallyName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_thinkanalytically"))
				{
					return this.FormattedValues["ecer_thinkanalytically"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Instructor uses activities in class to determine whether students understand course material.
///
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_understandcoursematerial")]
		public virtual ecer_YesNoNull? ecer_UnderstandCourseMaterial
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_understandcoursematerial")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_understandcoursematerial", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_understandcoursematerialcomment")]
		public string ecer_UnderstandCourseMaterialComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_understandcoursematerialcomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_understandcoursematerialcomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_understandcoursematerialname")]
		public string ecer_understandcoursematerialName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_understandcoursematerial"))
				{
					return this.FormattedValues["ecer_understandcoursematerial"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Instructor uses concrete examples and illustrations that clarify the material.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_usesconcreteexamples")]
		public virtual ecer_YesNoNull? ecer_Usesconcreteexamples
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_usesconcreteexamples")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_usesconcreteexamples", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_usesconcreteexamplescomment")]
		public string ecer_UsesConcreteExamplesComment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_usesconcreteexamplescomment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_usesconcreteexamplescomment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_usesconcreteexamplesname")]
		public string ecer_usesconcreteexamplesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_usesconcreteexamples"))
				{
					return this.FormattedValues["ecer_usesconcreteexamples"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_verbaldiscussion")]
		public virtual ecer_YesNoNull? ecer_VerbalDiscussion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_verbaldiscussion")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_verbaldiscussion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_verbaldiscussioncomments")]
		public string ecer_verbaldiscussionComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_verbaldiscussioncomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_verbaldiscussioncomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_verbaldiscussionname")]
		public string ecer_verbaldiscussionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_verbaldiscussion"))
				{
					return this.FormattedValues["ecer_verbaldiscussion"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_visualtvimages")]
		public virtual ecer_YesNoNull? ecer_VisualTVImages
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_visualtvimages")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_visualtvimages", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_visualtvimagescomments")]
		public string ecer_visualtvimagesComments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_visualtvimagescomments");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_visualtvimagescomments", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_visualtvimagesname")]
		public string ecer_visualtvimagesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_visualtvimages"))
				{
					return this.FormattedValues["ecer_visualtvimages"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Status of the PSP Observation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ecer_pspobservation_statecode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_pspobservation_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the PSP Observation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ecer_pspobservation_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_pspobservation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_postsecondaryinstitutionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute")]
		public ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstitute ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstitute>("ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstitute>("ecer_pspobservation_postsecondaryinstitutionid_ecer_postsecondaryinstitute", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sitevisitid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit")]
		public ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstituteSiteVisit ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstituteSiteVisit>("ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_PostSecondaryInstituteSiteVisit>("ecer_pspobservation_sitevisitid_ecer_postsecondaryinstitutesitevisit", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_pspobservation(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ecer_pspobservationid"] = base.Id;
                        break;
                    case "ecer_pspobservationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
