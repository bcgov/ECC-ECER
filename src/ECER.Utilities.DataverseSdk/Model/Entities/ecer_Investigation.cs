#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECER.Utilities.DataverseSdk.Model
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_ecer_ContactMethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Email = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phone = 621870000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PhysicalMail = 621870002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_ecer_Immediate_action_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspension = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCs = 621870000,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_ecer_IntakeType
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complaint = 621870000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ReferenceVerification = 621870002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Referral = 621870001,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_ecer_InvestigationComplexity
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		High = 621870000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Low = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Moderate = 621870002,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_investigation_ecer_ReasonforPriorityAssignment
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ApplicationinProgress = 621870002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CertificationExpiredExpiring = 621870003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LawyerInvolved = 621870006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OpenInvestigation = 621870000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PreviouslyInvestigated = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Suspended = 621870005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TCsAttached = 621870004,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_ecer_Source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Anonymous = 621870000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CoWorker = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Director = 621870007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EducationalInstitution = 621870014,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Employee = 621870005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Employer = 621870003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FormerCoWorker = 621870002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FormerEmployee = 621870006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FormerEmployer = 621870004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FraserHealthAuthority = 621870021,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HA = 100000000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InteriorHealthAuthority = 621870019,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IslandHealthAuthority = 621870018,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Licensee = 621870009,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Manager = 621870008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MCFD = 621870015,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NorthernHealthAuthority = 621870022,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OtherSeeNote = 100000001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ParentorGuardian = 621870010,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PrivateCitizen = 621870011,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		RCMPPolice = 621870017,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reference = 621870013,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Registry = 621870016,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Relative = 621870012,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VancouverCoastalHealthAuthority = 621870020,
	}
	
	/// <summary>
	/// Status of the Investigation
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_investigation_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Investigation
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public enum ecer_Investigation_StatusCode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ActiveReview = 621870016,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Appeal = 621870008,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Assigned = 621870001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClosedLinkedtoPrimary = 621870012,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Complete = 621870009,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Concluded = 621870007,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConclusionReview = 621870018,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IntakeinProgress = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IntakeinReview = 621870011,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvestigationHigh = 621870003,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvestigationLow = 621870002,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InvestigationModerate = 621870013,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Monitoring = 621870004,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		New = 621870010,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OutofMandate = 621870015,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Reconsideration = 621870005,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SummaryReportSenttoRegistrant = 621870006,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SummaryReview = 621870017,
	}
	
	/// <summary>
	/// The review and assessment of complaints
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ecer_investigation")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public partial class ecer_Investigation : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ecer_investigation entity
		/// </summary>
		public partial class Fields
		{
			public const string bpf_ecer_investigation_ecer_investigationprocess = "bpf_ecer_investigation_ecer_investigationprocess";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ecer_allegation_Investigation_ecer_investigati = "ecer_allegation_Investigation_ecer_investigati";
			public const string ecer_Appeal = "ecer_appeal";
			public const string ecer_appealName = "ecer_appealname";
			public const string ecer_appealperiodendDate = "ecer_appealperiodenddate";
			public const string ecer_Applicant = "ecer_applicant";
			public const string ecer_ApplicantName = "ecer_applicantname";
			public const string ecer_ApplicantYomiName = "ecer_applicantyominame";
			public const string ecer_application_parallelprocessinvestigationid_ecer_investigation = "ecer_application_parallelprocessinvestigationid_ecer_investigation";
			public const string ecer_ApplicationInProgressIntake = "ecer_applicationinprogressintake";
			public const string ecer_applicationinprogressintakeName = "ecer_applicationinprogressintakename";
			public const string ecer_AssessmentandRecommendationsComplete = "ecer_assessmentandrecommendationscomplete";
			public const string ecer_assessmentandrecommendationscompleteName = "ecer_assessmentandrecommendationscompletename";
			public const string ecer_AssigntoInvestigator = "ecer_assigntoinvestigator";
			public const string ecer_AssigntoInvestigatorName = "ecer_assigntoinvestigatorname";
			public const string ecer_AssigntoInvestigatorYomiName = "ecer_assigntoinvestigatoryominame";
			public const string ecer_assigntomanagerforactivestagereview = "ecer_assigntomanagerforactivestagereview";
			public const string ecer_assigntomanagerforactivestagereviewName = "ecer_assigntomanagerforactivestagereviewname";
			public const string ecer_assigntomanagerforconclusionstagereview = "ecer_assigntomanagerforconclusionstagereview";
			public const string ecer_assigntomanagerforconclusionstagereviewName = "ecer_assigntomanagerforconclusionstagereviewname";
			public const string ecer_assigntomanagerforintakestagereview = "ecer_assigntomanagerforintakestagereview";
			public const string ecer_assigntomanagerforintakestagereviewName = "ecer_assigntomanagerforintakestagereviewname";
			public const string ecer_AssigntoManagerforSummaryStageReview = "ecer_assigntomanagerforsummarystagereview";
			public const string ecer_assigntomanagerforsummarystagereviewName = "ecer_assigntomanagerforsummarystagereviewname";
			public const string ecer_assigntositeamforconclusionreview = "ecer_assigntositeamforconclusionreview";
			public const string ecer_assigntositeamforconclusionreviewName = "ecer_assigntositeamforconclusionreviewname";
			public const string ecer_AssigntoSITeamforIntakeReview = "ecer_assigntositeamforintakereview";
			public const string ecer_assigntositeamforintakereviewName = "ecer_assigntositeamforintakereviewname";
			public const string ecer_BehaviouralGuidance = "ecer_behaviouralguidance";
			public const string ecer_behaviouralguidanceName = "ecer_behaviouralguidancename";
			public const string ecer_CclrOneNineTwoA = "ecer_cclroneninetwoa";
			public const string ecer_cclroneninetwoaName = "ecer_cclroneninetwoaname";
			public const string ecer_CclrOneNineTwoB = "ecer_cclroneninetwob";
			public const string ecer_cclroneninetwobName = "ecer_cclroneninetwobname";
			public const string ecer_CclrOneNineTwoC = "ecer_cclroneninetwoc";
			public const string ecer_cclroneninetwocName = "ecer_cclroneninetwocname";
			public const string ecer_CclrThreeTwoB = "ecer_cclrthreetwob";
			public const string ecer_cclrthreetwobName = "ecer_cclrthreetwobname";
			public const string ecer_CertificateNumber = "ecer_certificatenumber";
			public const string ecer_CertificateStatus = "ecer_certificatestatus";
			public const string ecer_CertificationExpireIntake = "ecer_certificationexpireintake";
			public const string ecer_certificationexpireintakeName = "ecer_certificationexpireintakename";
			public const string ecer_CertificationType = "ecer_certificationtype";
			public const string ecer_CharacterReferenceId = "ecer_characterreferenceid";
			public const string ecer_CharacterReferenceIdName = "ecer_characterreferenceidname";
			public const string ecer_ClientId = "ecer_clientid";
			public const string ecer_ClosedWithoutFindings = "ecer_closedwithoutfindings";
			public const string ecer_closedwithoutfindingsName = "ecer_closedwithoutfindingsname";
			public const string ecer_communication_Investigation_ecer_investig = "ecer_communication_Investigation_ecer_investig";
			public const string ecer_CompetencyGapsAddressed = "ecer_competencygapsaddressed";
			public const string ecer_competencygapsaddressedName = "ecer_competencygapsaddressedname";
			public const string ecer_complainant_lookup = "ecer_complainant_lookup";
			public const string ecer_complainant_lookupName = "ecer_complainant_lookupname";
			public const string ecer_ComplainantDescription = "ecer_complainantdescription";
			public const string ecer_ComplainantFirstName = "ecer_complainantfirstname";
			public const string ecer_ComplainantLastName = "ecer_complainantlastname";
			public const string ecer_ComplainantOrganizationDetails = "ecer_complainantorganizationdetails";
			public const string ecer_CompletedBy = "ecer_completedby";
			public const string ecer_CompletedByInitial = "ecer_completedbyinitial";
			public const string ecer_CompletedByName = "ecer_completedbyname";
			public const string ecer_CompletedByYomiName = "ecer_completedbyyominame";
			public const string ecer_ConclusionDate = "ecer_conclusiondate";
			public const string ecer_ConclusionReportReviewComplete = "ecer_conclusionreportreviewcomplete";
			public const string ecer_conclusionreportreviewcompleteName = "ecer_conclusionreportreviewcompletename";
			public const string ecer_ConclusionReportSent = "ecer_conclusionreportsent";
			public const string ecer_conclusionreportsentName = "ecer_conclusionreportsentname";
			public const string ecer_conclusionsenttops = "ecer_conclusionsenttops";
			public const string ecer_conclusionsenttopsName = "ecer_conclusionsenttopsname";
			public const string ecer_contact_ecer_investigation_Applicant = "ecer_contact_ecer_investigation_Applicant";
			public const string ecer_ContactMethod = "ecer_contactmethod";
			public const string ecer_contactmethodName = "ecer_contactmethodname";
			public const string ecer_CurrentCertificate = "ecer_currentcertificate";
			public const string ecer_CurrentCertificateName = "ecer_currentcertificatename";
			public const string ecer_DateofAssignment = "ecer_dateofassignment";
			public const string ecer_DateofBirth = "ecer_dateofbirth";
			public const string ecer_DaysBetweenAssignmentConcludedDate = "ecer_daysbetweenassignmentconcludeddate";
			public const string ecer_DaysBetweenIntakeCompleteConcludedDate = "ecer_daysbetweenintakecompleteconcludeddate";
			public const string ecer_documenturl_InvestigationId = "ecer_documenturl_InvestigationId";
			public const string ecer_ecer_application_ecer_investigation_OpenApplication = "ecer_ecer_application_ecer_investigation_OpenApplication";
			public const string ecer_ecer_certificate_ecer_investigation_CurrentCertificate = "ecer_ecer_certificate_ecer_investigation_CurrentCertificate";
			public const string ecer_ecer_complainant_ecer_investigation_complainant_lookup = "ecer_ecer_complainant_ecer_investigation_complainant_lookup";
			public const string ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId = "ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId";
			public const string ecer_ecer_investigation_health_authorities = "ecer_ecer_investigation_health_authorities";
			public const string ecer_ecer_investigation_licensing_officers = "ecer_ecer_investigation_licensing_officers";
			public const string ecer_EducationalInstitution = "ecer_educationalinstitution";
			public const string ecer_EmailAddress = "ecer_emailaddress";
			public const string ecer_EmailAddressContact = "ecer_emailaddresscontact";
			public const string ecer_EmailComplainant = "ecer_emailcomplainant";
			public const string ecer_EmployerNameIncident = "ecer_employernameincident";
			public const string ecer_EmploymentStatusNotes = "ecer_employmentstatusnotes";
			public const string ecer_ExpiryDate = "ecer_expirydate";
			public const string ecer_Facility = "ecer_facility";
			public const string ecer_FalsifiedDocuments = "ecer_falsifieddocuments";
			public const string ecer_falsifieddocumentsName = "ecer_falsifieddocumentsname";
			public const string ecer_FiveTwoOneA = "ecer_fivetwoonea";
			public const string ecer_fivetwooneaName = "ecer_fivetwooneaname";
			public const string ecer_FiveTwoOneB = "ecer_fivetwooneb";
			public const string ecer_fivetwoonebName = "ecer_fivetwoonebname";
			public const string ecer_FiveTwoOneC = "ecer_fivetwoonec";
			public const string ecer_fivetwoonecName = "ecer_fivetwoonecname";
			public const string ecer_FiveTwoOneD = "ecer_fivetwooned";
			public const string ecer_fivetwoonedName = "ecer_fivetwoonedname";
			public const string ecer_FiveTwoOneE = "ecer_fivetwoonee";
			public const string ecer_fivetwooneeName = "ecer_fivetwooneename";
			public const string ecer_FiveTwoOneF = "ecer_fivetwoonef";
			public const string ecer_fivetwoonefName = "ecer_fivetwoonefname";
			public const string ecer_FiveTwoTwoA = "ecer_fivetwotwoa";
			public const string ecer_fivetwotwoaName = "ecer_fivetwotwoaname";
			public const string ecer_FiveTwoTwoC = "ecer_fivetwotwoc";
			public const string ecer_fivetwotwocName = "ecer_fivetwotwocname";
			public const string ecer_FiveTwoTwoD = "ecer_fivetwotwod";
			public const string ecer_fivetwotwodName = "ecer_fivetwotwodname";
			public const string ecer_FiveTwoTwoE = "ecer_fivetwotwoe";
			public const string ecer_fivetwotwoeName = "ecer_fivetwotwoename";
			public const string ecer_FunctionEightA = "ecer_functioneighta";
			public const string ecer_functioneightaName = "ecer_functioneightaname";
			public const string ecer_FunctionEightB = "ecer_functioneightb";
			public const string ecer_functioneightbName = "ecer_functioneightbname";
			public const string ecer_FunctionFiveA = "ecer_functionfivea";
			public const string ecer_functionfiveaName = "ecer_functionfiveaname";
			public const string ecer_FunctionFiveB = "ecer_functionfiveb";
			public const string ecer_functionfivebName = "ecer_functionfivebname";
			public const string ecer_FunctionFourA = "ecer_functionfoura";
			public const string ecer_functionfouraName = "ecer_functionfouraname";
			public const string ecer_FunctionFourB = "ecer_functionfourb";
			public const string ecer_functionfourbName = "ecer_functionfourbname";
			public const string ecer_FunctionFourC = "ecer_functionfourc";
			public const string ecer_functionfourcName = "ecer_functionfourcname";
			public const string ecer_FunctionOneA = "ecer_functiononea";
			public const string ecer_functiononeaName = "ecer_functiononeaname";
			public const string ecer_FunctionOneB = "ecer_functiononeb";
			public const string ecer_functiononebName = "ecer_functiononebname";
			public const string ecer_FunctionOneC = "ecer_functiononec";
			public const string ecer_functiononecName = "ecer_functiononecname";
			public const string ecer_FunctionOneD = "ecer_functiononed";
			public const string ecer_functiononedName = "ecer_functiononedname";
			public const string ecer_FunctionSevenA = "ecer_functionsevena";
			public const string ecer_functionsevenaName = "ecer_functionsevenaname";
			public const string ecer_FunctionSevenB = "ecer_functionsevenb";
			public const string ecer_functionsevenbName = "ecer_functionsevenbname";
			public const string ecer_FunctionSevenC = "ecer_functionsevenc";
			public const string ecer_functionsevencName = "ecer_functionsevencname";
			public const string ecer_FunctionSevenD = "ecer_functionsevend";
			public const string ecer_functionsevendName = "ecer_functionsevendname";
			public const string ecer_FunctionSixA = "ecer_functionsixa";
			public const string ecer_functionsixaName = "ecer_functionsixaname";
			public const string ecer_FunctionSixB = "ecer_functionsixb";
			public const string ecer_functionsixbName = "ecer_functionsixbname";
			public const string ecer_FunctionSixC = "ecer_functionsixc";
			public const string ecer_functionsixcName = "ecer_functionsixcname";
			public const string ecer_FunctionThreeA = "ecer_functionthreea";
			public const string ecer_functionthreeaName = "ecer_functionthreeaname";
			public const string ecer_FunctionThreeB = "ecer_functionthreeb";
			public const string ecer_functionthreebName = "ecer_functionthreebname";
			public const string ecer_FunctionThreeC = "ecer_functionthreec";
			public const string ecer_functionthreecName = "ecer_functionthreecname";
			public const string ecer_FunctionTwoA = "ecer_functiontwoa";
			public const string ecer_functiontwoaName = "ecer_functiontwoaname";
			public const string ecer_FunctionTwoB = "ecer_functiontwob";
			public const string ecer_functiontwobName = "ecer_functiontwobname";
			public const string ecer_FunctionTwoC = "ecer_functiontwoc";
			public const string ecer_functiontwocName = "ecer_functiontwocname";
			public const string ecer_FunctionTwoD = "ecer_functiontwod";
			public const string ecer_functiontwodName = "ecer_functiontwodname";
			public const string ecer_FunctionTwoE = "ecer_functiontwoe";
			public const string ecer_functiontwoeName = "ecer_functiontwoename";
			public const string ecer_HasComplainantBeenInformedForContact = "ecer_hascomplainantbeeninformedforcontact";
			public const string ecer_hascomplainantbeeninformedforcontactName = "ecer_hascomplainantbeeninformedforcontactname";
			public const string ecer_health_authorities = "ecer_health_authorities";
			public const string ecer_health_authoritiesName = "ecer_health_authoritiesname";
			public const string ecer_HealthAuthority = "ecer_healthauthority";
			public const string ecer_healthauthorityName = "ecer_healthauthorityname";
			public const string ecer_HealthOfRegistrant = "ecer_healthofregistrant";
			public const string ecer_healthofregistrantName = "ecer_healthofregistrantname";
			public const string ecer_IdNumber = "ecer_idnumber";
			public const string ecer_Immediate_action_type = "ecer_immediate_action_type";
			public const string ecer_immediate_action_typeName = "ecer_immediate_action_typename";
			public const string ecer_ImmediateAction = "ecer_immediateaction";
			public const string ecer_immediateactionName = "ecer_immediateactionname";
			public const string ecer_ImmediateActionReason = "ecer_immediateactionreason";
			public const string ecer_ImmediateCertificateAction = "ecer_immediatecertificateaction";
			public const string ecer_immediatecertificateactionName = "ecer_immediatecertificateactionname";
			public const string ecer_ImmediateInvestigatorAssignment = "ecer_immediateinvestigatorassignment";
			public const string ecer_immediateinvestigatorassignmentName = "ecer_immediateinvestigatorassignmentname";
			public const string ecer_intakeformexported = "ecer_intakeformexported";
			public const string ecer_intakeformexportedName = "ecer_intakeformexportedname";
			public const string ecer_intakeofficerid = "ecer_intakeofficerid";
			public const string ecer_intakeofficeridName = "ecer_intakeofficeridname";
			public const string ecer_intakeofficeridYomiName = "ecer_intakeofficeridyominame";
			public const string ecer_IntakeReceivedDate = "ecer_intakereceiveddate";
			public const string ecer_IntakeType = "ecer_intaketype";
			public const string ecer_intaketypeName = "ecer_intaketypename";
			public const string ecer_InterviewQuestionsReviewComplete = "ecer_interviewquestionsreviewcomplete";
			public const string ecer_interviewquestionsreviewcompleteName = "ecer_interviewquestionsreviewcompletename";
			public const string ecer_InterviewsComplete = "ecer_interviewscomplete";
			public const string ecer_interviewscompleteName = "ecer_interviewscompletename";
			public const string ecer_investigation_CharacterReferenceId_ecer_c = "ecer_investigation_CharacterReferenceId_ecer_c";
			public const string ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies = "ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies";
			public const string ecer_investigation_ecer_finding = "ecer_investigation_ecer_finding";
			public const string Referencingecer_investigation_primaryid = "ecer_investigation_primaryid";
			public const string ecer_investigation_WorkExperienceReferenceId_e = "ecer_investigation_WorkExperienceReferenceId_e";
			public const string ecer_investigationcompetency_Investigation_ecer_investigation = "ecer_investigationcompetency_Investigation_ecer_investigation";
			public const string ecer_InvestigationComplexity = "ecer_investigationcomplexity";
			public const string ecer_investigationcomplexityName = "ecer_investigationcomplexityname";
			public const string ecer_InvestigationConcludedDate = "ecer_investigationconcludeddate";
			public const string ecer_investigationhistory_InvestigationId_ecer_investigation = "ecer_investigationhistory_InvestigationId_ecer_investigation";
			public const string ecer_InvestigationId = "ecer_investigationid";
			public const string Id = "ecer_investigationid";
			public const string ecer_InvestigationOutcome = "ecer_investigationoutcome";
			public const string ecer_investigationoutcomeName = "ecer_investigationoutcomename";
			public const string ecer_investigationplanningallegation_Investiga = "ecer_investigationplanningallegation_Investiga";
			public const string ecer_investigationplanningcontactsforcollabora = "ecer_investigationplanningcontactsforcollabora";
			public const string ecer_investigationplanningcorefactualissue_Inv = "ecer_investigationplanningcorefactualissue_Inv";
			public const string ecer_investigationplanningdocumentationrecord_ = "ecer_investigationplanningdocumentationrecord_";
			public const string ecer_investigationplanninginterview_Investigat = "ecer_investigationplanninginterview_Investigat";
			public const string ecer_investigationplanninginvolvedperson_Inves = "ecer_investigationplanninginvolvedperson_Inves";
			public const string ecer_investigationplanningriskconsideration_In = "ecer_investigationplanningriskconsideration_In";
			public const string ecer_InvestigationThresholdMet = "ecer_investigationthresholdmet";
			public const string ecer_investigationthresholdmetName = "ecer_investigationthresholdmetname";
			public const string ecer_investigatorid = "ecer_investigatorid";
			public const string ecer_investigatoridName = "ecer_investigatoridname";
			public const string ecer_investigatoridYomiName = "ecer_investigatoridyominame";
			public const string ecer_involvedperson_Investigation_ecer_investi = "ecer_involvedperson_Investigation_ecer_investi";
			public const string ecer_IsComplainantReviewed = "ecer_iscomplainantreviewed";
			public const string ecer_iscomplainantreviewedName = "ecer_iscomplainantreviewedname";
			public const string ecer_IsConsentProvided = "ecer_isconsentprovided";
			public const string ecer_isconsentprovidedName = "ecer_isconsentprovidedname";
			public const string ecer_IsRegistrantStillEmployed = "ecer_isregistrantstillemployed";
			public const string ecer_isregistrantstillemployedName = "ecer_isregistrantstillemployedname";
			public const string ecer_LawyerInvolvedIntake = "ecer_lawyerinvolvedintake";
			public const string ecer_lawyerinvolvedintakeName = "ecer_lawyerinvolvedintakename";
			public const string ecer_legacyinvestigationid = "ecer_legacyinvestigationid";
			public const string ecer_legacystatusid = "ecer_legacystatusid";
			public const string ecer_licensing_officers = "ecer_licensing_officers";
			public const string ecer_licensing_officersName = "ecer_licensing_officersname";
			public const string ecer_LimitstoConsentAdditionalInformation = "ecer_limitstoconsentadditionalinformation";
			public const string ecer_mailaddressincident = "ecer_mailaddressincident";
			public const string ecer_MailingAddress = "ecer_mailingaddress";
			public const string ecer_MailingAddressContact = "ecer_mailingaddresscontact";
			public const string ecer_managerreviewcompleteactivestage = "ecer_managerreviewcompleteactivestage";
			public const string ecer_managerreviewcompleteactivestageName = "ecer_managerreviewcompleteactivestagename";
			public const string ecer_managerreviewcompleteconclusionstage = "ecer_managerreviewcompleteconclusionstage";
			public const string ecer_managerreviewcompleteconclusionstageName = "ecer_managerreviewcompleteconclusionstagename";
			public const string ecer_managerreviewcompleteintakestage = "ecer_managerreviewcompleteintakestage";
			public const string ecer_managerreviewcompleteintakestageName = "ecer_managerreviewcompleteintakestagename";
			public const string ecer_managerreviewcompletesummarystage = "ecer_managerreviewcompletesummarystage";
			public const string ecer_managerreviewcompletesummarystageName = "ecer_managerreviewcompletesummarystagename";
			public const string ecer_Name = "ecer_name";
			public const string ecer_NoGapsIdentified = "ecer_nogapsidentified";
			public const string ecer_nogapsidentifiedName = "ecer_nogapsidentifiedname";
			public const string ecer_noilettersent = "ecer_noilettersent";
			public const string ecer_noilettersentName = "ecer_noilettersentname";
			public const string ecer_noiphonecallcomplete = "ecer_noiphonecallcomplete";
			public const string ecer_noiphonecallcompleteName = "ecer_noiphonecallcompletename";
			public const string ecer_Notes = "ecer_notes";
			public const string ecer_notice_of_immediate_action_allegations = "ecer_notice_of_immediate_action_allegations";
			public const string ecer_notice_of_Immediate_action_content = "ecer_notice_of_immediate_action_content";
			public const string ecer_NoticeofInvestigationTemplateContent = "ecer_noticeofinvestigationtemplatecontent";
			public const string ecer_OccupationalCompetencies = "ecer_occupationalcompetencies";
			public const string ecer_occupationalcompetenciesName = "ecer_occupationalcompetenciesname";
			public const string ecer_OpenApplication = "ecer_openapplication";
			public const string ecer_OpenApplicationName = "ecer_openapplicationname";
			public const string ecer_OpenInvestigationIntake = "ecer_openinvestigationintake";
			public const string ecer_openinvestigationintakeName = "ecer_openinvestigationintakename";
			public const string ecer_OutOfMandate = "ecer_outofmandate";
			public const string ecer_outofmandatecallcomlete = "ecer_outofmandatecallcomlete";
			public const string ecer_outofmandatecallcomleteName = "ecer_outofmandatecallcomletename";
			public const string ecer_outofmandateName = "ecer_outofmandatename";
			public const string ecer_ParallelProcess = "ecer_parallelprocess";
			public const string ecer_parallelprocesscommunicationinvestigation = "ecer_parallelprocesscommunicationinvestigation";
			public const string ecer_parallelprocessName = "ecer_parallelprocessname";
			public const string ecer_PortalSubmission = "ecer_portalsubmission";
			public const string ecer_portalsubmissionName = "ecer_portalsubmissionname";
			public const string ecer_PreviouslyInvestigatedIntake = "ecer_previouslyinvestigatedintake";
			public const string ecer_previouslyinvestigatedintakeName = "ecer_previouslyinvestigatedintakename";
			public const string ecer_PreviousStatus = "ecer_previousstatus";
			public const string ecer_primaryid = "ecer_primaryid";
			public const string ecer_primaryidName = "ecer_primaryidname";
			public const string ecer_ReadyforAssignment = "ecer_readyforassignment";
			public const string ecer_readyforassignmentName = "ecer_readyforassignmentname";
			public const string ecer_ReasonforPriorityAssignment = "ecer_reasonforpriorityassignment";
			public const string ecer_reasonforpriorityassignmentName = "ecer_reasonforpriorityassignmentname";
			public const string ecer_RecommendforPriorityAssignment = "ecer_recommendforpriorityassignment";
			public const string ecer_recommendforpriorityassignmentName = "ecer_recommendforpriorityassignmentname";
			public const string ecer_ReconRequest = "ecer_reconrequest";
			public const string ecer_reconrequestName = "ecer_reconrequestname";
			public const string ecer_reconsiderationperiodenddate = "ecer_reconsiderationperiodenddate";
			public const string ecer_ReferencesComplete = "ecer_referencescomplete";
			public const string ecer_referencescompleteName = "ecer_referencescompletename";
			public const string ecer_Referrer = "ecer_referrer";
			public const string ecer_ReferrerGUID = "ecer_referrerguid";
			public const string ecer_ReferrerName = "ecer_referrername";
			public const string ecer_ReferrerYomiName = "ecer_referreryominame";
			public const string ecer_RegistrantCertificateNumber = "ecer_registrantcertificatenumber";
			public const string ecer_RegistrantFirstName = "ecer_registrantfirstname";
			public const string ecer_RegistrantIsMinor = "ecer_registrantisminor";
			public const string ecer_registrantisminorName = "ecer_registrantisminorname";
			public const string ecer_RegistrantLastName = "ecer_registrantlastname";
			public const string ecer_reportcompletiondate = "ecer_reportcompletiondate";
			public const string ecer_ReportinProgress = "ecer_reportinprogress";
			public const string ecer_reportinprogressName = "ecer_reportinprogressname";
			public const string ecer_ReportSent = "ecer_reportsent";
			public const string ecer_reportsentName = "ecer_reportsentname";
			public const string ecer_reportsenttops = "ecer_reportsenttops";
			public const string ecer_reportsenttopsName = "ecer_reportsenttopsname";
			public const string ecer_RequestedResponsebyDate = "ecer_requestedresponsebydate";
			public const string ecer_ResponseReceived = "ecer_responsereceived";
			public const string ecer_responsereceivedName = "ecer_responsereceivedname";
			public const string ecer_ResponseReviewed = "ecer_responsereviewed";
			public const string ecer_responsereviewedName = "ecer_responsereviewedname";
			public const string ecer_SectionAFour = "ecer_sectionafour";
			public const string ecer_sectionafourName = "ecer_sectionafourname";
			public const string ecer_SectionAOne = "ecer_sectionaone";
			public const string ecer_sectionaoneName = "ecer_sectionaonename";
			public const string ecer_SectionAThree = "ecer_sectionathree";
			public const string ecer_sectionathreeName = "ecer_sectionathreename";
			public const string ecer_SectionATwo = "ecer_sectionatwo";
			public const string ecer_sectionatwoName = "ecer_sectionatwoname";
			public const string ecer_SectionBFive = "ecer_sectionbfive";
			public const string ecer_sectionbfiveName = "ecer_sectionbfivename";
			public const string ecer_SectionBFour = "ecer_sectionbfour";
			public const string ecer_sectionbfourName = "ecer_sectionbfourname";
			public const string ecer_SectionBOne = "ecer_sectionbone";
			public const string ecer_sectionboneName = "ecer_sectionbonename";
			public const string ecer_SectionBThree = "ecer_sectionbthree";
			public const string ecer_sectionbthreeName = "ecer_sectionbthreename";
			public const string ecer_SectionBTwo = "ecer_sectionbtwo";
			public const string ecer_sectionbtwoName = "ecer_sectionbtwoname";
			public const string ecer_SectionCOne = "ecer_sectioncone";
			public const string ecer_sectionconeName = "ecer_sectionconename";
			public const string ecer_SectionCThree = "ecer_sectioncthree";
			public const string ecer_sectioncthreeName = "ecer_sectioncthreename";
			public const string ecer_SectionCTwo = "ecer_sectionctwo";
			public const string ecer_sectionctwoName = "ecer_sectionctwoname";
			public const string ecer_seniorinvestigatorid = "ecer_seniorinvestigatorid";
			public const string ecer_seniorinvestigatoridName = "ecer_seniorinvestigatoridname";
			public const string ecer_seniorinvestigatoridYomiName = "ecer_seniorinvestigatoridyominame";
			public const string ecer_SIReportReviewComplete = "ecer_sireportreviewcomplete";
			public const string ecer_sireportreviewcompleteName = "ecer_sireportreviewcompletename";
			public const string ecer_SIReviewComplete = "ecer_sireviewcomplete";
			public const string ecer_sireviewcompleteName = "ecer_sireviewcompletename";
			public const string ecer_SITeamActiveReview = "ecer_siteamactivereview";
			public const string ecer_siteamactivereviewName = "ecer_siteamactivereviewname";
			public const string ecer_SITeamSummaryReview = "ecer_siteamsummaryreview";
			public const string ecer_siteamsummaryreviewName = "ecer_siteamsummaryreviewname";
			public const string ecer_SiteContactNameIncident = "ecer_sitecontactnameincident";
			public const string ecer_SiteNameIncident = "ecer_sitenameincident";
			public const string ecer_Source = "ecer_source";
			public const string ecer_sourceName = "ecer_sourcename";
			public const string ecer_SummaryofEvidenceToolUploaded = "ecer_summaryofevidencetooluploaded";
			public const string ecer_summaryofevidencetooluploadedName = "ecer_summaryofevidencetooluploadedname";
			public const string ecer_SummaryReportSent = "ecer_summaryreportsent";
			public const string ecer_summaryreportsentName = "ecer_summaryreportsentname";
			public const string ecer_summarysenttops = "ecer_summarysenttops";
			public const string ecer_summarysenttopsName = "ecer_summarysenttopsname";
			public const string ecer_Supervision = "ecer_supervision";
			public const string ecer_supervisionName = "ecer_supervisionname";
			public const string ecer_SuspendedIntake = "ecer_suspendedintake";
			public const string ecer_suspendedintakeName = "ecer_suspendedintakename";
			public const string ecer_TCAttachedIntake = "ecer_tcattachedintake";
			public const string ecer_tcattachedintakeName = "ecer_tcattachedintakename";
			public const string ecer_TelephoneNumber = "ecer_telephonenumber";
			public const string ecer_TelephoneNumberComplainant = "ecer_telephonenumbercomplainant";
			public const string ecer_TelephoneNumberContact = "ecer_telephonenumbercontact";
			public const string ecer_TelephoneNumberIncident = "ecer_telephonenumberincident";
			public const string ecer_TimeToAssignment = "ecer_timetoassignment";
			public const string ecer_WorkExperienceReferenceId = "ecer_workexperiencereferenceid";
			public const string ecer_WorkExperienceReferenceIdName = "ecer_workexperiencereferenceidname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string processid = "processid";
			public const string Referencedecer_investigation_primaryid = "Referencedecer_investigation_primaryid";
			public const string stageid = "stageid";
			public const string StateCode = "statecode";
			public const string statecodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string traversedpath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_Investigation(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_Investigation(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_Investigation(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		public const string AlternateKeys = "ecer_idnumber";
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_Investigation() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ecer_investigationid";
		
		public const string PrimaryNameAttribute = "ecer_name";
		
		public const string EntitySchemaName = "ecer_Investigation";
		
		public const string EntityLogicalName = "ecer_investigation";
		
		public const string EntityLogicalCollectionName = "ecer_investigations";
		
		public const string EntitySetName = "ecer_investigations";
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_appeal")]
		public virtual ecer_YesNoNull? ecer_Appeal
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_appeal")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_appeal", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_appealname")]
		public string ecer_appealName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_appeal"))
				{
					return this.FormattedValues["ecer_appeal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_appealperiodenddate")]
		public System.Nullable<System.DateTime> ecer_appealperiodendDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_appealperiodenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_appealperiodenddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicant")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_Applicant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_applicant");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_applicant", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicantname")]
		public string ecer_ApplicantName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_applicant"))
				{
					return this.FormattedValues["ecer_applicant"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicantyominame")]
		public string ecer_ApplicantYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_applicant"))
				{
					return this.FormattedValues["ecer_applicant"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicationinprogressintake")]
		public virtual ecer_YesNoNull? ecer_ApplicationInProgressIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_applicationinprogressintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_applicationinprogressintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicationinprogressintakename")]
		public string ecer_applicationinprogressintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_applicationinprogressintake"))
				{
					return this.FormattedValues["ecer_applicationinprogressintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assessmentandrecommendationscomplete")]
		public virtual ecer_YesNoNull? ecer_AssessmentandRecommendationsComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assessmentandrecommendationscomplete")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assessmentandrecommendationscomplete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assessmentandrecommendationscompletename")]
		public string ecer_assessmentandrecommendationscompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assessmentandrecommendationscomplete"))
				{
					return this.FormattedValues["ecer_assessmentandrecommendationscomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntoinvestigator")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_AssigntoInvestigator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_assigntoinvestigator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntoinvestigator", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntoinvestigatorname")]
		public string ecer_AssigntoInvestigatorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntoinvestigator"))
				{
					return this.FormattedValues["ecer_assigntoinvestigator"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntoinvestigatoryominame")]
		public string ecer_AssigntoInvestigatorYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntoinvestigator"))
				{
					return this.FormattedValues["ecer_assigntoinvestigator"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforactivestagereview")]
		public virtual ecer_YesNoNull? ecer_assigntomanagerforactivestagereview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntomanagerforactivestagereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntomanagerforactivestagereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforactivestagereviewname")]
		public string ecer_assigntomanagerforactivestagereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntomanagerforactivestagereview"))
				{
					return this.FormattedValues["ecer_assigntomanagerforactivestagereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforconclusionstagereview")]
		public virtual ecer_YesNoNull? ecer_assigntomanagerforconclusionstagereview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntomanagerforconclusionstagereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntomanagerforconclusionstagereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforconclusionstagereviewname")]
		public string ecer_assigntomanagerforconclusionstagereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntomanagerforconclusionstagereview"))
				{
					return this.FormattedValues["ecer_assigntomanagerforconclusionstagereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforintakestagereview")]
		public virtual ecer_YesNoNull? ecer_assigntomanagerforintakestagereview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntomanagerforintakestagereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntomanagerforintakestagereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforintakestagereviewname")]
		public string ecer_assigntomanagerforintakestagereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntomanagerforintakestagereview"))
				{
					return this.FormattedValues["ecer_assigntomanagerforintakestagereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforsummarystagereview")]
		public virtual ecer_YesNoNull? ecer_AssigntoManagerforSummaryStageReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntomanagerforsummarystagereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntomanagerforsummarystagereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntomanagerforsummarystagereviewname")]
		public string ecer_assigntomanagerforsummarystagereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntomanagerforsummarystagereview"))
				{
					return this.FormattedValues["ecer_assigntomanagerforsummarystagereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntositeamforconclusionreview")]
		public virtual ecer_YesNoNull? ecer_assigntositeamforconclusionreview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntositeamforconclusionreview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntositeamforconclusionreview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntositeamforconclusionreviewname")]
		public string ecer_assigntositeamforconclusionreviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntositeamforconclusionreview"))
				{
					return this.FormattedValues["ecer_assigntositeamforconclusionreview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntositeamforintakereview")]
		public virtual ecer_YesNoNull? ecer_AssigntoSITeamforIntakeReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_assigntositeamforintakereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_assigntositeamforintakereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_assigntositeamforintakereviewname")]
		public string ecer_assigntositeamforintakereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_assigntositeamforintakereview"))
				{
					return this.FormattedValues["ecer_assigntositeamforintakereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_behaviouralguidance")]
		public virtual ecer_YesNoNull? ecer_BehaviouralGuidance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_behaviouralguidance")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_behaviouralguidance", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_behaviouralguidancename")]
		public string ecer_behaviouralguidanceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_behaviouralguidance"))
				{
					return this.FormattedValues["ecer_behaviouralguidance"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwoa")]
		public virtual ecer_YesNoNull? ecer_CclrOneNineTwoA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_cclroneninetwoa")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_cclroneninetwoa", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwoaname")]
		public string ecer_cclroneninetwoaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_cclroneninetwoa"))
				{
					return this.FormattedValues["ecer_cclroneninetwoa"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwob")]
		public virtual ecer_YesNoNull? ecer_CclrOneNineTwoB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_cclroneninetwob")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_cclroneninetwob", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwobname")]
		public string ecer_cclroneninetwobName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_cclroneninetwob"))
				{
					return this.FormattedValues["ecer_cclroneninetwob"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwoc")]
		public virtual ecer_YesNoNull? ecer_CclrOneNineTwoC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_cclroneninetwoc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_cclroneninetwoc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclroneninetwocname")]
		public string ecer_cclroneninetwocName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_cclroneninetwoc"))
				{
					return this.FormattedValues["ecer_cclroneninetwoc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclrthreetwob")]
		public virtual ecer_YesNoNull? ecer_CclrThreeTwoB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_cclrthreetwob")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_cclrthreetwob", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_cclrthreetwobname")]
		public string ecer_cclrthreetwobName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_cclrthreetwob"))
				{
					return this.FormattedValues["ecer_cclrthreetwob"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_certificatenumber")]
		public string ecer_CertificateNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_certificatenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_certificatenumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_certificatestatus")]
		public string ecer_CertificateStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_certificatestatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_certificatestatus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_certificationexpireintake")]
		public virtual ecer_YesNoNull? ecer_CertificationExpireIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_certificationexpireintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_certificationexpireintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_certificationexpireintakename")]
		public string ecer_certificationexpireintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_certificationexpireintake"))
				{
					return this.FormattedValues["ecer_certificationexpireintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_certificationtype")]
		public string ecer_CertificationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_certificationtype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_certificationtype", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_characterreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_CharacterReferenceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_characterreferenceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_characterreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_characterreferenceidname")]
		public string ecer_CharacterReferenceIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_characterreferenceid"))
				{
					return this.FormattedValues["ecer_characterreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_clientid")]
		public string ecer_ClientId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_clientid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_clientid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_closedwithoutfindings")]
		public virtual ecer_YesNoNull? ecer_ClosedWithoutFindings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_closedwithoutfindings")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_closedwithoutfindings", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_closedwithoutfindingsname")]
		public string ecer_closedwithoutfindingsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_closedwithoutfindings"))
				{
					return this.FormattedValues["ecer_closedwithoutfindings"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_competencygapsaddressed")]
		public virtual ecer_CompetencyGapsAddressed? ecer_CompetencyGapsAddressed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_CompetencyGapsAddressed?)(EntityOptionSetEnum.GetEnum(this, "ecer_competencygapsaddressed")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_competencygapsaddressed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_competencygapsaddressedname")]
		public string ecer_competencygapsaddressedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_competencygapsaddressed"))
				{
					return this.FormattedValues["ecer_competencygapsaddressed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainant_lookup")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_complainant_lookup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_complainant_lookup");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_complainant_lookup", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainant_lookupname")]
		public string ecer_complainant_lookupName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_complainant_lookup"))
				{
					return this.FormattedValues["ecer_complainant_lookup"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainantdescription")]
		public string ecer_ComplainantDescription
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_complainantdescription");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_complainantdescription", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainantfirstname")]
		public string ecer_ComplainantFirstName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_complainantfirstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_complainantfirstname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainantlastname")]
		public string ecer_ComplainantLastName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_complainantlastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_complainantlastname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainantorganizationdetails")]
		public string ecer_ComplainantOrganizationDetails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_complainantorganizationdetails");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_complainantorganizationdetails", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_completedby")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_CompletedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_completedby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_completedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_completedbyinitial")]
		public string ecer_CompletedByInitial
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_completedbyinitial");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_completedbyinitial", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_completedbyname")]
		public string ecer_CompletedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_completedby"))
				{
					return this.FormattedValues["ecer_completedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_completedbyyominame")]
		public string ecer_CompletedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_completedby"))
				{
					return this.FormattedValues["ecer_completedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusiondate")]
		public System.Nullable<System.DateTime> ecer_ConclusionDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_conclusiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_conclusiondate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionreportreviewcomplete")]
		public System.Nullable<bool> ecer_ConclusionReportReviewComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_conclusionreportreviewcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_conclusionreportreviewcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionreportreviewcompletename")]
		public string ecer_conclusionreportreviewcompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_conclusionreportreviewcomplete"))
				{
					return this.FormattedValues["ecer_conclusionreportreviewcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionreportsent")]
		public System.Nullable<bool> ecer_ConclusionReportSent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_conclusionreportsent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_conclusionreportsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionreportsentname")]
		public string ecer_conclusionreportsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_conclusionreportsent"))
				{
					return this.FormattedValues["ecer_conclusionreportsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionsenttops")]
		public System.Nullable<bool> ecer_conclusionsenttops
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_conclusionsenttops");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_conclusionsenttops", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_conclusionsenttopsname")]
		public string ecer_conclusionsenttopsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_conclusionsenttops"))
				{
					return this.FormattedValues["ecer_conclusionsenttops"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_contactmethod")]
		public virtual ecer_Investigation_ecer_ContactMethod? ecer_ContactMethod
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_ecer_ContactMethod?)(EntityOptionSetEnum.GetEnum(this, "ecer_contactmethod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_contactmethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_contactmethodname")]
		public string ecer_contactmethodName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_contactmethod"))
				{
					return this.FormattedValues["ecer_contactmethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_currentcertificate")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_CurrentCertificate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_currentcertificate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_currentcertificate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_currentcertificatename")]
		public string ecer_CurrentCertificateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_currentcertificate"))
				{
					return this.FormattedValues["ecer_currentcertificate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_dateofassignment")]
		public System.Nullable<System.DateTime> ecer_DateofAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_dateofassignment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_dateofassignment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_dateofbirth")]
		public System.Nullable<System.DateTime> ecer_DateofBirth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_dateofbirth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_dateofbirth", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_daysbetweenassignmentconcludeddate")]
		public System.Nullable<int> ecer_DaysBetweenAssignmentConcludedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ecer_daysbetweenassignmentconcludeddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_daysbetweenassignmentconcludeddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_daysbetweenintakecompleteconcludeddate")]
		public System.Nullable<int> ecer_DaysBetweenIntakeCompleteConcludedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ecer_daysbetweenintakecompleteconcludeddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_daysbetweenintakecompleteconcludeddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_educationalinstitution")]
		public string ecer_EducationalInstitution
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_educationalinstitution");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_educationalinstitution", value);
			}
		}
		
		/// <summary>
		/// This is the Email Address Provided by Complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_emailaddress")]
		public string ecer_EmailAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_emailaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_emailaddress", value);
			}
		}
		
		/// <summary>
		/// This is the Email Address from Applicant/Registrant record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_emailaddresscontact")]
		public string ecer_EmailAddressContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_emailaddresscontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_emailaddresscontact", value);
			}
		}
		
		/// <summary>
		/// This is the Email for the Complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_emailcomplainant")]
		public string ecer_EmailComplainant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_emailcomplainant");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_emailcomplainant", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_employernameincident")]
		public string ecer_EmployerNameIncident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_employernameincident");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_employernameincident", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_employmentstatusnotes")]
		public string ecer_EmploymentStatusNotes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_employmentstatusnotes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_employmentstatusnotes", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_expirydate")]
		public System.Nullable<System.DateTime> ecer_ExpiryDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_expirydate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_expirydate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_facility")]
		public string ecer_Facility
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_facility");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_facility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_falsifieddocuments")]
		public virtual ecer_YesNoNull? ecer_FalsifiedDocuments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_falsifieddocuments")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_falsifieddocuments", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_falsifieddocumentsname")]
		public string ecer_falsifieddocumentsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_falsifieddocuments"))
				{
					return this.FormattedValues["ecer_falsifieddocuments"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonea")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwoonea")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwoonea", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwooneaname")]
		public string ecer_fivetwooneaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwoonea"))
				{
					return this.FormattedValues["ecer_fivetwoonea"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwooneb")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwooneb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwooneb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonebname")]
		public string ecer_fivetwoonebName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwooneb"))
				{
					return this.FormattedValues["ecer_fivetwooneb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonec")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwoonec")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwoonec", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonecname")]
		public string ecer_fivetwoonecName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwoonec"))
				{
					return this.FormattedValues["ecer_fivetwoonec"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwooned")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneD
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwooned")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwooned", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonedname")]
		public string ecer_fivetwoonedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwooned"))
				{
					return this.FormattedValues["ecer_fivetwooned"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonee")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwoonee")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwoonee", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwooneename")]
		public string ecer_fivetwooneeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwoonee"))
				{
					return this.FormattedValues["ecer_fivetwoonee"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonef")]
		public virtual ecer_YesNoNull? ecer_FiveTwoOneF
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwoonef")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwoonef", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwoonefname")]
		public string ecer_fivetwoonefName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwoonef"))
				{
					return this.FormattedValues["ecer_fivetwoonef"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwoa")]
		public virtual ecer_YesNoNull? ecer_FiveTwoTwoA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwotwoa")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwotwoa", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwoaname")]
		public string ecer_fivetwotwoaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwotwoa"))
				{
					return this.FormattedValues["ecer_fivetwotwoa"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwoc")]
		public virtual ecer_YesNoNull? ecer_FiveTwoTwoC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwotwoc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwotwoc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwocname")]
		public string ecer_fivetwotwocName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwotwoc"))
				{
					return this.FormattedValues["ecer_fivetwotwoc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwod")]
		public virtual ecer_YesNoNull? ecer_FiveTwoTwoD
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwotwod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwotwod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwodname")]
		public string ecer_fivetwotwodName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwotwod"))
				{
					return this.FormattedValues["ecer_fivetwotwod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwoe")]
		public virtual ecer_YesNoNull? ecer_FiveTwoTwoE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_fivetwotwoe")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_fivetwotwoe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_fivetwotwoename")]
		public string ecer_fivetwotwoeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_fivetwotwoe"))
				{
					return this.FormattedValues["ecer_fivetwotwoe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functioneighta")]
		public virtual ecer_YesNoNull? ecer_FunctionEightA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functioneighta")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functioneighta", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functioneightaname")]
		public string ecer_functioneightaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functioneighta"))
				{
					return this.FormattedValues["ecer_functioneighta"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functioneightb")]
		public virtual ecer_YesNoNull? ecer_FunctionEightB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functioneightb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functioneightb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functioneightbname")]
		public string ecer_functioneightbName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functioneightb"))
				{
					return this.FormattedValues["ecer_functioneightb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfivea")]
		public virtual ecer_YesNoNull? ecer_FunctionFiveA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionfivea")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionfivea", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfiveaname")]
		public string ecer_functionfiveaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionfivea"))
				{
					return this.FormattedValues["ecer_functionfivea"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfiveb")]
		public virtual ecer_YesNoNull? ecer_FunctionFiveB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionfiveb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionfiveb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfivebname")]
		public string ecer_functionfivebName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionfiveb"))
				{
					return this.FormattedValues["ecer_functionfiveb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfoura")]
		public virtual ecer_YesNoNull? ecer_FunctionFourA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionfoura")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionfoura", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfouraname")]
		public string ecer_functionfouraName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionfoura"))
				{
					return this.FormattedValues["ecer_functionfoura"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfourb")]
		public virtual ecer_YesNoNull? ecer_FunctionFourB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionfourb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionfourb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfourbname")]
		public string ecer_functionfourbName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionfourb"))
				{
					return this.FormattedValues["ecer_functionfourb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfourc")]
		public virtual ecer_YesNoNull? ecer_FunctionFourC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionfourc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionfourc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionfourcname")]
		public string ecer_functionfourcName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionfourc"))
				{
					return this.FormattedValues["ecer_functionfourc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononea")]
		public virtual ecer_YesNoNull? ecer_FunctionOneA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiononea")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiononea", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononeaname")]
		public string ecer_functiononeaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiononea"))
				{
					return this.FormattedValues["ecer_functiononea"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononeb")]
		public virtual ecer_YesNoNull? ecer_FunctionOneB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiononeb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiononeb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononebname")]
		public string ecer_functiononebName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiononeb"))
				{
					return this.FormattedValues["ecer_functiononeb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononec")]
		public virtual ecer_YesNoNull? ecer_FunctionOneC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiononec")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiononec", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononecname")]
		public string ecer_functiononecName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiononec"))
				{
					return this.FormattedValues["ecer_functiononec"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononed")]
		public virtual ecer_YesNoNull? ecer_FunctionOneD
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiononed")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiononed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiononedname")]
		public string ecer_functiononedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiononed"))
				{
					return this.FormattedValues["ecer_functiononed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevena")]
		public virtual ecer_YesNoNull? ecer_FunctionSevenA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsevena")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsevena", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevenaname")]
		public string ecer_functionsevenaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsevena"))
				{
					return this.FormattedValues["ecer_functionsevena"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevenb")]
		public virtual ecer_YesNoNull? ecer_FunctionSevenB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsevenb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsevenb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevenbname")]
		public string ecer_functionsevenbName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsevenb"))
				{
					return this.FormattedValues["ecer_functionsevenb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevenc")]
		public virtual ecer_YesNoNull? ecer_FunctionSevenC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsevenc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsevenc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevencname")]
		public string ecer_functionsevencName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsevenc"))
				{
					return this.FormattedValues["ecer_functionsevenc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevend")]
		public virtual ecer_YesNoNull? ecer_FunctionSevenD
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsevend")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsevend", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsevendname")]
		public string ecer_functionsevendName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsevend"))
				{
					return this.FormattedValues["ecer_functionsevend"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixa")]
		public virtual ecer_YesNoNull? ecer_FunctionSixA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsixa")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsixa", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixaname")]
		public string ecer_functionsixaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsixa"))
				{
					return this.FormattedValues["ecer_functionsixa"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixb")]
		public virtual ecer_YesNoNull? ecer_FunctionSixB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsixb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsixb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixbname")]
		public string ecer_functionsixbName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsixb"))
				{
					return this.FormattedValues["ecer_functionsixb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixc")]
		public virtual ecer_YesNoNull? ecer_FunctionSixC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionsixc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionsixc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionsixcname")]
		public string ecer_functionsixcName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionsixc"))
				{
					return this.FormattedValues["ecer_functionsixc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreea")]
		public virtual ecer_YesNoNull? ecer_FunctionThreeA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionthreea")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionthreea", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreeaname")]
		public string ecer_functionthreeaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionthreea"))
				{
					return this.FormattedValues["ecer_functionthreea"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreeb")]
		public virtual ecer_YesNoNull? ecer_FunctionThreeB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionthreeb")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionthreeb", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreebname")]
		public string ecer_functionthreebName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionthreeb"))
				{
					return this.FormattedValues["ecer_functionthreeb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreec")]
		public virtual ecer_YesNoNull? ecer_FunctionThreeC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functionthreec")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functionthreec", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functionthreecname")]
		public string ecer_functionthreecName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functionthreec"))
				{
					return this.FormattedValues["ecer_functionthreec"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwoa")]
		public virtual ecer_YesNoNull? ecer_FunctionTwoA
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiontwoa")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiontwoa", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwoaname")]
		public string ecer_functiontwoaName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiontwoa"))
				{
					return this.FormattedValues["ecer_functiontwoa"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwob")]
		public virtual ecer_YesNoNull? ecer_FunctionTwoB
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiontwob")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiontwob", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwobname")]
		public string ecer_functiontwobName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiontwob"))
				{
					return this.FormattedValues["ecer_functiontwob"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwoc")]
		public virtual ecer_YesNoNull? ecer_FunctionTwoC
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiontwoc")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiontwoc", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwocname")]
		public string ecer_functiontwocName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiontwoc"))
				{
					return this.FormattedValues["ecer_functiontwoc"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwod")]
		public virtual ecer_YesNoNull? ecer_FunctionTwoD
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiontwod")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiontwod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwodname")]
		public string ecer_functiontwodName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiontwod"))
				{
					return this.FormattedValues["ecer_functiontwod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwoe")]
		public virtual ecer_YesNoNull? ecer_FunctionTwoE
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_functiontwoe")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_functiontwoe", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_functiontwoename")]
		public string ecer_functiontwoeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_functiontwoe"))
				{
					return this.FormattedValues["ecer_functiontwoe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Has the complainant been informed that the Registry may contact them for more information?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_hascomplainantbeeninformedforcontact")]
		public virtual ecer_YesNoNull? ecer_HasComplainantBeenInformedForContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_hascomplainantbeeninformedforcontact")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_hascomplainantbeeninformedforcontact", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_hascomplainantbeeninformedforcontactname")]
		public string ecer_hascomplainantbeeninformedforcontactName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_hascomplainantbeeninformedforcontact"))
				{
					return this.FormattedValues["ecer_hascomplainantbeeninformedforcontact"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_health_authorities")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_health_authorities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_health_authorities");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_health_authorities", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_health_authoritiesname")]
		public string ecer_health_authoritiesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_health_authorities"))
				{
					return this.FormattedValues["ecer_health_authorities"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_healthauthority")]
		public virtual ecer_healthauthority? ecer_HealthAuthority
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_healthauthority?)(EntityOptionSetEnum.GetEnum(this, "ecer_healthauthority")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_healthauthority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_healthauthorityname")]
		public string ecer_healthauthorityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_healthauthority"))
				{
					return this.FormattedValues["ecer_healthauthority"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_healthofregistrant")]
		public virtual ecer_YesNoNull? ecer_HealthOfRegistrant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_healthofregistrant")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_healthofregistrant", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_healthofregistrantname")]
		public string ecer_healthofregistrantName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_healthofregistrant"))
				{
					return this.FormattedValues["ecer_healthofregistrant"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Auto generated ID 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_idnumber")]
		public string ecer_IdNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_idnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_idnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediate_action_type")]
		public virtual ecer_Investigation_ecer_Immediate_action_type? ecer_Immediate_action_type
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_ecer_Immediate_action_type?)(EntityOptionSetEnum.GetEnum(this, "ecer_immediate_action_type")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_immediate_action_type", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediate_action_typename")]
		public string ecer_immediate_action_typeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_immediate_action_type"))
				{
					return this.FormattedValues["ecer_immediate_action_type"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediateaction")]
		public virtual ecer_immediateaction? ecer_ImmediateAction
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_immediateaction?)(EntityOptionSetEnum.GetEnum(this, "ecer_immediateaction")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_immediateaction", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediateactionname")]
		public string ecer_immediateactionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_immediateaction"))
				{
					return this.FormattedValues["ecer_immediateaction"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediateactionreason")]
		public string ecer_ImmediateActionReason
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_immediateactionreason");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_immediateactionreason", value);
			}
		}
		
		/// <summary>
		/// Recommended to supervisor for Immediate Action (Suspension of Certificate/Terms and Conditions)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediatecertificateaction")]
		public virtual ecer_YesNoNull? ecer_ImmediateCertificateAction
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_immediatecertificateaction")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_immediatecertificateaction", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediatecertificateactionname")]
		public string ecer_immediatecertificateactionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_immediatecertificateaction"))
				{
					return this.FormattedValues["ecer_immediatecertificateaction"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Recommended to supervisor for immediate assignment to an Investigator?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediateinvestigatorassignment")]
		public virtual ecer_YesNoNull? ecer_ImmediateInvestigatorAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_immediateinvestigatorassignment")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_immediateinvestigatorassignment", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_immediateinvestigatorassignmentname")]
		public string ecer_immediateinvestigatorassignmentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_immediateinvestigatorassignment"))
				{
					return this.FormattedValues["ecer_immediateinvestigatorassignment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakeformexported")]
		public virtual ecer_YesNoNull? ecer_intakeformexported
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_intakeformexported")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_intakeformexported", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakeformexportedname")]
		public string ecer_intakeformexportedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_intakeformexported"))
				{
					return this.FormattedValues["ecer_intakeformexported"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakeofficerid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_intakeofficerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_intakeofficerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_intakeofficerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakeofficeridname")]
		public string ecer_intakeofficeridName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_intakeofficerid"))
				{
					return this.FormattedValues["ecer_intakeofficerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakeofficeridyominame")]
		public string ecer_intakeofficeridYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_intakeofficerid"))
				{
					return this.FormattedValues["ecer_intakeofficerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intakereceiveddate")]
		public System.Nullable<System.DateTime> ecer_IntakeReceivedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_intakereceiveddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_intakereceiveddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intaketype")]
		public virtual ecer_Investigation_ecer_IntakeType? ecer_IntakeType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_ecer_IntakeType?)(EntityOptionSetEnum.GetEnum(this, "ecer_intaketype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_intaketype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_intaketypename")]
		public string ecer_intaketypeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_intaketype"))
				{
					return this.FormattedValues["ecer_intaketype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_interviewquestionsreviewcomplete")]
		public System.Nullable<bool> ecer_InterviewQuestionsReviewComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_interviewquestionsreviewcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_interviewquestionsreviewcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_interviewquestionsreviewcompletename")]
		public string ecer_interviewquestionsreviewcompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_interviewquestionsreviewcomplete"))
				{
					return this.FormattedValues["ecer_interviewquestionsreviewcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_interviewscomplete")]
		public System.Nullable<bool> ecer_InterviewsComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_interviewscomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_interviewscomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_interviewscompletename")]
		public string ecer_interviewscompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_interviewscomplete"))
				{
					return this.FormattedValues["ecer_interviewscomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationcomplexity")]
		public virtual ecer_Investigation_ecer_InvestigationComplexity? ecer_InvestigationComplexity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_ecer_InvestigationComplexity?)(EntityOptionSetEnum.GetEnum(this, "ecer_investigationcomplexity")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigationcomplexity", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationcomplexityname")]
		public string ecer_investigationcomplexityName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_investigationcomplexity"))
				{
					return this.FormattedValues["ecer_investigationcomplexity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationconcludeddate")]
		public System.Nullable<System.DateTime> ecer_InvestigationConcludedDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_investigationconcludeddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigationconcludeddate", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationid")]
		public System.Nullable<System.Guid> ecer_InvestigationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ecer_investigationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ecer_InvestigationId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationoutcome")]
		public virtual ecer_InvestigationOutcome? ecer_InvestigationOutcome
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_InvestigationOutcome?)(EntityOptionSetEnum.GetEnum(this, "ecer_investigationoutcome")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigationoutcome", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationoutcomename")]
		public string ecer_investigationoutcomeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_investigationoutcome"))
				{
					return this.FormattedValues["ecer_investigationoutcome"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Concern(s)/incident(s) meet the legislative threshold for investigation by the Registry
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationthresholdmet")]
		public virtual ecer_YesNoNull? ecer_InvestigationThresholdMet
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_investigationthresholdmet")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigationthresholdmet", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigationthresholdmetname")]
		public string ecer_investigationthresholdmetName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_investigationthresholdmet"))
				{
					return this.FormattedValues["ecer_investigationthresholdmet"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigatorid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_investigatorid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_investigatorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_investigatorid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigatoridname")]
		public string ecer_investigatoridName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_investigatorid"))
				{
					return this.FormattedValues["ecer_investigatorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_investigatoridyominame")]
		public string ecer_investigatoridYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_investigatorid"))
				{
					return this.FormattedValues["ecer_investigatorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Has the confidentiality script been reviewed with the complainant?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_iscomplainantreviewed")]
		public virtual ecer_YesNoNull? ecer_IsComplainantReviewed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_iscomplainantreviewed")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_iscomplainantreviewed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_iscomplainantreviewedname")]
		public string ecer_iscomplainantreviewedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_iscomplainantreviewed"))
				{
					return this.FormattedValues["ecer_iscomplainantreviewed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Has the complainant given consent to provide their information to a referred agency?
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_isconsentprovided")]
		public virtual ecer_YesNoNull? ecer_IsConsentProvided
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_isconsentprovided")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_isconsentprovided", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_isconsentprovidedname")]
		public string ecer_isconsentprovidedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_isconsentprovided"))
				{
					return this.FormattedValues["ecer_isconsentprovided"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Is the Registrant still employed at the location of incident
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_isregistrantstillemployed")]
		public virtual ecer_YesNoNull? ecer_IsRegistrantStillEmployed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_isregistrantstillemployed")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_isregistrantstillemployed", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_isregistrantstillemployedname")]
		public string ecer_isregistrantstillemployedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_isregistrantstillemployed"))
				{
					return this.FormattedValues["ecer_isregistrantstillemployed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_lawyerinvolvedintake")]
		public virtual ecer_YesNoNull? ecer_LawyerInvolvedIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_lawyerinvolvedintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_lawyerinvolvedintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_lawyerinvolvedintakename")]
		public string ecer_lawyerinvolvedintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_lawyerinvolvedintake"))
				{
					return this.FormattedValues["ecer_lawyerinvolvedintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_legacyinvestigationid")]
		public string ecer_legacyinvestigationid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_legacyinvestigationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_legacyinvestigationid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_legacystatusid")]
		public System.Nullable<int> ecer_legacystatusid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ecer_legacystatusid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_legacystatusid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_licensing_officers")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_licensing_officers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_licensing_officers");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_licensing_officers", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_licensing_officersname")]
		public string ecer_licensing_officersName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_licensing_officers"))
				{
					return this.FormattedValues["ecer_licensing_officers"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Limits to Consent/Additional Information
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_limitstoconsentadditionalinformation")]
		public string ecer_LimitstoConsentAdditionalInformation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_limitstoconsentadditionalinformation");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_limitstoconsentadditionalinformation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_mailaddressincident")]
		public string ecer_mailaddressincident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_mailaddressincident");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_mailaddressincident", value);
			}
		}
		
		/// <summary>
		/// This is the Mailing Address Provided by Complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_mailingaddress")]
		public string ecer_MailingAddress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_mailingaddress");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_mailingaddress", value);
			}
		}
		
		/// <summary>
		/// This is the Mailing Address from Applicant/Registrant record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_mailingaddresscontact")]
		public string ecer_MailingAddressContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_mailingaddresscontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_mailingaddresscontact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteactivestage")]
		public virtual ecer_YesNoNull? ecer_managerreviewcompleteactivestage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_managerreviewcompleteactivestage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_managerreviewcompleteactivestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteactivestagename")]
		public string ecer_managerreviewcompleteactivestageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_managerreviewcompleteactivestage"))
				{
					return this.FormattedValues["ecer_managerreviewcompleteactivestage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteconclusionstage")]
		public virtual ecer_YesNoNull? ecer_managerreviewcompleteconclusionstage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_managerreviewcompleteconclusionstage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_managerreviewcompleteconclusionstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteconclusionstagename")]
		public string ecer_managerreviewcompleteconclusionstageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_managerreviewcompleteconclusionstage"))
				{
					return this.FormattedValues["ecer_managerreviewcompleteconclusionstage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteintakestage")]
		public virtual ecer_YesNoNull? ecer_managerreviewcompleteintakestage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_managerreviewcompleteintakestage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_managerreviewcompleteintakestage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompleteintakestagename")]
		public string ecer_managerreviewcompleteintakestageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_managerreviewcompleteintakestage"))
				{
					return this.FormattedValues["ecer_managerreviewcompleteintakestage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompletesummarystage")]
		public virtual ecer_YesNoNull? ecer_managerreviewcompletesummarystage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_managerreviewcompletesummarystage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_managerreviewcompletesummarystage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_managerreviewcompletesummarystagename")]
		public string ecer_managerreviewcompletesummarystageName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_managerreviewcompletesummarystage"))
				{
					return this.FormattedValues["ecer_managerreviewcompletesummarystage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_name")]
		public string ecer_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_name", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_nogapsidentified")]
		public virtual ecer_YesNoNull? ecer_NoGapsIdentified
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_nogapsidentified")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_nogapsidentified", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_nogapsidentifiedname")]
		public string ecer_nogapsidentifiedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_nogapsidentified"))
				{
					return this.FormattedValues["ecer_nogapsidentified"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_noilettersent")]
		public System.Nullable<bool> ecer_noilettersent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_noilettersent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_noilettersent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_noilettersentname")]
		public string ecer_noilettersentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_noilettersent"))
				{
					return this.FormattedValues["ecer_noilettersent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_noiphonecallcomplete")]
		public System.Nullable<bool> ecer_noiphonecallcomplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_noiphonecallcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_noiphonecallcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_noiphonecallcompletename")]
		public string ecer_noiphonecallcompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_noiphonecallcomplete"))
				{
					return this.FormattedValues["ecer_noiphonecallcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_notes")]
		public string ecer_Notes
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_notes");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_notes", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_notice_of_immediate_action_allegations")]
		public string ecer_notice_of_immediate_action_allegations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_notice_of_immediate_action_allegations");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_notice_of_immediate_action_allegations", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_notice_of_immediate_action_content")]
		public string ecer_notice_of_Immediate_action_content
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_notice_of_immediate_action_content");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_notice_of_immediate_action_content", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_noticeofinvestigationtemplatecontent")]
		public string ecer_NoticeofInvestigationTemplateContent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_noticeofinvestigationtemplatecontent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_noticeofinvestigationtemplatecontent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_occupationalcompetencies")]
		public virtual ecer_YesNoNull? ecer_OccupationalCompetencies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_occupationalcompetencies")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_occupationalcompetencies", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_occupationalcompetenciesname")]
		public string ecer_occupationalcompetenciesName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_occupationalcompetencies"))
				{
					return this.FormattedValues["ecer_occupationalcompetencies"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_openapplication")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_OpenApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_openapplication");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_openapplication", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_openapplicationname")]
		public string ecer_OpenApplicationName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_openapplication"))
				{
					return this.FormattedValues["ecer_openapplication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_openinvestigationintake")]
		public virtual ecer_YesNoNull? ecer_OpenInvestigationIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_openinvestigationintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_openinvestigationintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_openinvestigationintakename")]
		public string ecer_openinvestigationintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_openinvestigationintake"))
				{
					return this.FormattedValues["ecer_openinvestigationintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_outofmandate")]
		public virtual ecer_YesNoNull? ecer_OutOfMandate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_outofmandate")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_outofmandate", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_outofmandatecallcomlete")]
		public System.Nullable<bool> ecer_outofmandatecallcomlete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_outofmandatecallcomlete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_outofmandatecallcomlete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_outofmandatecallcomletename")]
		public string ecer_outofmandatecallcomleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_outofmandatecallcomlete"))
				{
					return this.FormattedValues["ecer_outofmandatecallcomlete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_outofmandatename")]
		public string ecer_outofmandateName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_outofmandate"))
				{
					return this.FormattedValues["ecer_outofmandate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_parallelprocess")]
		public virtual ecer_YesNoNull? ecer_ParallelProcess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_parallelprocess")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_parallelprocess", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_parallelprocessname")]
		public string ecer_parallelprocessName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_parallelprocess"))
				{
					return this.FormattedValues["ecer_parallelprocess"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_portalsubmission")]
		public System.Nullable<bool> ecer_PortalSubmission
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_portalsubmission");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_portalsubmission", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_portalsubmissionname")]
		public string ecer_portalsubmissionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_portalsubmission"))
				{
					return this.FormattedValues["ecer_portalsubmission"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_previouslyinvestigatedintake")]
		public virtual ecer_YesNoNull? ecer_PreviouslyInvestigatedIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_previouslyinvestigatedintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_previouslyinvestigatedintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_previouslyinvestigatedintakename")]
		public string ecer_previouslyinvestigatedintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_previouslyinvestigatedintake"))
				{
					return this.FormattedValues["ecer_previouslyinvestigatedintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Capture the previous status reason
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_previousstatus")]
		public string ecer_PreviousStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_previousstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_previousstatus", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_primaryid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_primaryid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_primaryid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_primaryid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_primaryidname")]
		public string ecer_primaryidName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_primaryid"))
				{
					return this.FormattedValues["ecer_primaryid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_readyforassignment")]
		public virtual ecer_YesNoNull? ecer_ReadyforAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_readyforassignment")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_readyforassignment", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_readyforassignmentname")]
		public string ecer_readyforassignmentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_readyforassignment"))
				{
					return this.FormattedValues["ecer_readyforassignment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reasonforpriorityassignment")]
		public virtual System.Collections.Generic.IEnumerable<ecer_investigation_ecer_ReasonforPriorityAssignment> ecer_ReasonforPriorityAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<ecer_investigation_ecer_ReasonforPriorityAssignment>(this, "ecer_reasonforpriorityassignment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reasonforpriorityassignment", EntityOptionSetEnum.GetMultiEnum(this, "ecer_reasonforpriorityassignment", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reasonforpriorityassignmentname")]
		public string ecer_reasonforpriorityassignmentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_reasonforpriorityassignment"))
				{
					return this.FormattedValues["ecer_reasonforpriorityassignment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_recommendforpriorityassignment")]
		public virtual ecer_YesNoNull? ecer_RecommendforPriorityAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_recommendforpriorityassignment")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_recommendforpriorityassignment", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_recommendforpriorityassignmentname")]
		public string ecer_recommendforpriorityassignmentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_recommendforpriorityassignment"))
				{
					return this.FormattedValues["ecer_recommendforpriorityassignment"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reconrequest")]
		public virtual ecer_YesNoNull? ecer_ReconRequest
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_reconrequest")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reconrequest", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reconrequestname")]
		public string ecer_reconrequestName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_reconrequest"))
				{
					return this.FormattedValues["ecer_reconrequest"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reconsiderationperiodenddate")]
		public System.Nullable<System.DateTime> ecer_reconsiderationperiodenddate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_reconsiderationperiodenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reconsiderationperiodenddate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referencescomplete")]
		public System.Nullable<bool> ecer_ReferencesComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_referencescomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_referencescomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referencescompletename")]
		public string ecer_referencescompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_referencescomplete"))
				{
					return this.FormattedValues["ecer_referencescomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Name of supervisor or manager who triggered the referral
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referrer")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_Referrer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_referrer");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_referrer", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referrerguid")]
		public string ecer_ReferrerGUID
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_referrerguid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_referrerguid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referrername")]
		public string ecer_ReferrerName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_referrer"))
				{
					return this.FormattedValues["ecer_referrer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_referreryominame")]
		public string ecer_ReferrerYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_referrer"))
				{
					return this.FormattedValues["ecer_referrer"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_registrantcertificatenumber")]
		public string ecer_RegistrantCertificateNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_registrantcertificatenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_registrantcertificatenumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_registrantfirstname")]
		public string ecer_RegistrantFirstName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_registrantfirstname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_registrantfirstname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_registrantisminor")]
		public virtual ecer_YesNoNull? ecer_RegistrantIsMinor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_registrantisminor")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_registrantisminor", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_registrantisminorname")]
		public string ecer_registrantisminorName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_registrantisminor"))
				{
					return this.FormattedValues["ecer_registrantisminor"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_registrantlastname")]
		public string ecer_RegistrantLastName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_registrantlastname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_registrantlastname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportcompletiondate")]
		public System.Nullable<System.DateTime> ecer_reportcompletiondate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_reportcompletiondate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reportcompletiondate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportinprogress")]
		public virtual ecer_ReportinProgress? ecer_ReportinProgress
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_ReportinProgress?)(EntityOptionSetEnum.GetEnum(this, "ecer_reportinprogress")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reportinprogress", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportinprogressname")]
		public string ecer_reportinprogressName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_reportinprogress"))
				{
					return this.FormattedValues["ecer_reportinprogress"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportsent")]
		public System.Nullable<bool> ecer_ReportSent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_reportsent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reportsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportsentname")]
		public string ecer_reportsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_reportsent"))
				{
					return this.FormattedValues["ecer_reportsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportsenttops")]
		public System.Nullable<bool> ecer_reportsenttops
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_reportsenttops");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_reportsenttops", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_reportsenttopsname")]
		public string ecer_reportsenttopsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_reportsenttops"))
				{
					return this.FormattedValues["ecer_reportsenttops"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_requestedresponsebydate")]
		public System.Nullable<System.DateTime> ecer_RequestedResponsebyDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("ecer_requestedresponsebydate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_requestedresponsebydate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_responsereceived")]
		public System.Nullable<bool> ecer_ResponseReceived
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_responsereceived");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_responsereceived", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_responsereceivedname")]
		public string ecer_responsereceivedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_responsereceived"))
				{
					return this.FormattedValues["ecer_responsereceived"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_responsereviewed")]
		public System.Nullable<bool> ecer_ResponseReviewed
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_responsereviewed");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_responsereviewed", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_responsereviewedname")]
		public string ecer_responsereviewedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_responsereviewed"))
				{
					return this.FormattedValues["ecer_responsereviewed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionafour")]
		public virtual ecer_YesNoNull? ecer_SectionAFour
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionafour")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionafour", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionafourname")]
		public string ecer_sectionafourName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionafour"))
				{
					return this.FormattedValues["ecer_sectionafour"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionaone")]
		public virtual ecer_YesNoNull? ecer_SectionAOne
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionaone")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionaone", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionaonename")]
		public string ecer_sectionaoneName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionaone"))
				{
					return this.FormattedValues["ecer_sectionaone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionathree")]
		public virtual ecer_YesNoNull? ecer_SectionAThree
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionathree")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionathree", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionathreename")]
		public string ecer_sectionathreeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionathree"))
				{
					return this.FormattedValues["ecer_sectionathree"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionatwo")]
		public virtual ecer_YesNoNull? ecer_SectionATwo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionatwo")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionatwo", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionatwoname")]
		public string ecer_sectionatwoName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionatwo"))
				{
					return this.FormattedValues["ecer_sectionatwo"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbfive")]
		public virtual ecer_YesNoNull? ecer_SectionBFive
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionbfive")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionbfive", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbfivename")]
		public string ecer_sectionbfiveName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionbfive"))
				{
					return this.FormattedValues["ecer_sectionbfive"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbfour")]
		public virtual ecer_YesNoNull? ecer_SectionBFour
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionbfour")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionbfour", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbfourname")]
		public string ecer_sectionbfourName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionbfour"))
				{
					return this.FormattedValues["ecer_sectionbfour"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbone")]
		public virtual ecer_YesNoNull? ecer_SectionBOne
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionbone")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionbone", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbonename")]
		public string ecer_sectionboneName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionbone"))
				{
					return this.FormattedValues["ecer_sectionbone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbthree")]
		public virtual ecer_YesNoNull? ecer_SectionBThree
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionbthree")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionbthree", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbthreename")]
		public string ecer_sectionbthreeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionbthree"))
				{
					return this.FormattedValues["ecer_sectionbthree"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbtwo")]
		public virtual ecer_YesNoNull? ecer_SectionBTwo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionbtwo")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionbtwo", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionbtwoname")]
		public string ecer_sectionbtwoName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionbtwo"))
				{
					return this.FormattedValues["ecer_sectionbtwo"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectioncone")]
		public virtual ecer_YesNoNull? ecer_SectionCOne
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectioncone")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectioncone", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionconename")]
		public string ecer_sectionconeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectioncone"))
				{
					return this.FormattedValues["ecer_sectioncone"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectioncthree")]
		public virtual ecer_YesNoNull? ecer_SectionCThree
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectioncthree")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectioncthree", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectioncthreename")]
		public string ecer_sectioncthreeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectioncthree"))
				{
					return this.FormattedValues["ecer_sectioncthree"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionctwo")]
		public virtual ecer_YesNoNull? ecer_SectionCTwo
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_sectionctwo")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sectionctwo", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sectionctwoname")]
		public string ecer_sectionctwoName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sectionctwo"))
				{
					return this.FormattedValues["ecer_sectionctwo"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_seniorinvestigatorid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_seniorinvestigatorid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_seniorinvestigatorid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_seniorinvestigatorid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_seniorinvestigatoridname")]
		public string ecer_seniorinvestigatoridName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_seniorinvestigatorid"))
				{
					return this.FormattedValues["ecer_seniorinvestigatorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_seniorinvestigatoridyominame")]
		public string ecer_seniorinvestigatoridYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_seniorinvestigatorid"))
				{
					return this.FormattedValues["ecer_seniorinvestigatorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sireportreviewcomplete")]
		public System.Nullable<bool> ecer_SIReportReviewComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_sireportreviewcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sireportreviewcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sireportreviewcompletename")]
		public string ecer_sireportreviewcompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sireportreviewcomplete"))
				{
					return this.FormattedValues["ecer_sireportreviewcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sireviewcomplete")]
		public System.Nullable<bool> ecer_SIReviewComplete
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_sireviewcomplete");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sireviewcomplete", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sireviewcompletename")]
		public string ecer_sireviewcompleteName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_sireviewcomplete"))
				{
					return this.FormattedValues["ecer_sireviewcomplete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_siteamactivereview")]
		public virtual ecer_YesNoNull? ecer_SITeamActiveReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_siteamactivereview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_siteamactivereview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_siteamactivereviewname")]
		public string ecer_siteamactivereviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_siteamactivereview"))
				{
					return this.FormattedValues["ecer_siteamactivereview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_siteamsummaryreview")]
		public virtual ecer_YesNoNull? ecer_SITeamSummaryReview
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_siteamsummaryreview")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_siteamsummaryreview", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_siteamsummaryreviewname")]
		public string ecer_siteamsummaryreviewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_siteamsummaryreview"))
				{
					return this.FormattedValues["ecer_siteamsummaryreview"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sitecontactnameincident")]
		public string ecer_SiteContactNameIncident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_sitecontactnameincident");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sitecontactnameincident", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sitenameincident")]
		public string ecer_SiteNameIncident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_sitenameincident");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_sitenameincident", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_source")]
		public virtual ecer_Investigation_ecer_Source? ecer_Source
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_ecer_Source?)(EntityOptionSetEnum.GetEnum(this, "ecer_source")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_source", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_sourcename")]
		public string ecer_sourceName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_source"))
				{
					return this.FormattedValues["ecer_source"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summaryofevidencetooluploaded")]
		public System.Nullable<bool> ecer_SummaryofEvidenceToolUploaded
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_summaryofevidencetooluploaded");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_summaryofevidencetooluploaded", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summaryofevidencetooluploadedname")]
		public string ecer_summaryofevidencetooluploadedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_summaryofevidencetooluploaded"))
				{
					return this.FormattedValues["ecer_summaryofevidencetooluploaded"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summaryreportsent")]
		public System.Nullable<bool> ecer_SummaryReportSent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_summaryreportsent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_summaryreportsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summaryreportsentname")]
		public string ecer_summaryreportsentName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_summaryreportsent"))
				{
					return this.FormattedValues["ecer_summaryreportsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summarysenttops")]
		public System.Nullable<bool> ecer_summarysenttops
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ecer_summarysenttops");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_summarysenttops", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_summarysenttopsname")]
		public string ecer_summarysenttopsName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_summarysenttops"))
				{
					return this.FormattedValues["ecer_summarysenttops"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_supervision")]
		public virtual ecer_YesNoNull? ecer_Supervision
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_supervision")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_supervision", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_supervisionname")]
		public string ecer_supervisionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_supervision"))
				{
					return this.FormattedValues["ecer_supervision"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_suspendedintake")]
		public virtual ecer_YesNoNull? ecer_SuspendedIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_suspendedintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_suspendedintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_suspendedintakename")]
		public string ecer_suspendedintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_suspendedintake"))
				{
					return this.FormattedValues["ecer_suspendedintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_tcattachedintake")]
		public virtual ecer_YesNoNull? ecer_TCAttachedIntake
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_YesNoNull?)(EntityOptionSetEnum.GetEnum(this, "ecer_tcattachedintake")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_tcattachedintake", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_tcattachedintakename")]
		public string ecer_tcattachedintakeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_tcattachedintake"))
				{
					return this.FormattedValues["ecer_tcattachedintake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// This is the Telephone Number Provided by Complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_telephonenumber")]
		public string ecer_TelephoneNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_telephonenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_telephonenumber", value);
			}
		}
		
		/// <summary>
		/// This is the Telephone Number for the Complainant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_telephonenumbercomplainant")]
		public string ecer_TelephoneNumberComplainant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_telephonenumbercomplainant");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_telephonenumbercomplainant", value);
			}
		}
		
		/// <summary>
		/// This is the Telephone Number from Applicant/Registrant record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_telephonenumbercontact")]
		public string ecer_TelephoneNumberContact
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_telephonenumbercontact");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_telephonenumbercontact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_telephonenumberincident")]
		public string ecer_TelephoneNumberIncident
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("ecer_telephonenumberincident");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_telephonenumberincident", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_timetoassignment")]
		public System.Nullable<int> ecer_TimeToAssignment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ecer_timetoassignment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_timetoassignment", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_workexperiencereferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference ecer_WorkExperienceReferenceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ecer_workexperiencereferenceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ecer_workexperiencereferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_workexperiencereferenceidname")]
		public string ecer_WorkExperienceReferenceIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ecer_workexperiencereferenceid"))
				{
					return this.FormattedValues["ecer_workexperiencereferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Status of the Investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ecer_investigation_statecode? StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_investigation_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ecer_Investigation_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ecer_Investigation_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N bpf_ecer_investigation_ecer_investigationprocess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bpf_ecer_investigation_ecer_investigationprocess")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_investigationprocess> bpf_ecer_investigation_ecer_investigationprocess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_investigationprocess>("bpf_ecer_investigation_ecer_investigationprocess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_investigationprocess>("bpf_ecer_investigation_ecer_investigationprocess", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_allegation_Investigation_ecer_investigati
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_allegation_Investigation_ecer_investigati")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_Allegation> ecer_allegation_Investigation_ecer_investigati
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Allegation>("ecer_allegation_Investigation_ecer_investigati", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Allegation>("ecer_allegation_Investigation_ecer_investigati", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_application_parallelprocessinvestigationid_ecer_investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_application_parallelprocessinvestigationid_ecer_investigation")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_Application> ecer_application_parallelprocessinvestigationid_ecer_investigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Application>("ecer_application_parallelprocessinvestigationid_ecer_investigation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Application>("ecer_application_parallelprocessinvestigationid_ecer_investigation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_communication_Investigation_ecer_investig
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_communication_Investigation_ecer_investig")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_Communication> ecer_communication_Investigation_ecer_investig
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Communication>("ecer_communication_Investigation_ecer_investig", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Communication>("ecer_communication_Investigation_ecer_investig", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_documenturl_InvestigationId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_documenturl_InvestigationId")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.bcgov_DocumentUrl> ecer_documenturl_InvestigationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.bcgov_DocumentUrl>("ecer_documenturl_InvestigationId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.bcgov_DocumentUrl>("ecer_documenturl_InvestigationId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_ParallelProcessCommunication> ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_ParallelProcessCommunication>("ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_ParallelProcessCommunication>("ecer_ecer_investigation_ecer_parallelprocesscommunication_InvestigationId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigation_ecer_finding
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigation_ecer_finding")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_finding> ecer_investigation_ecer_finding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_finding>("ecer_investigation_ecer_finding", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_finding>("ecer_investigation_ecer_finding", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigation_primaryid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_Investigation> Referencedecer_investigation_primaryid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Investigation>("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_Investigation>("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationcompetency_Investigation_ecer_investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationcompetency_Investigation_ecer_investigation")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationCompetency> ecer_investigationcompetency_Investigation_ecer_investigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationCompetency>("ecer_investigationcompetency_Investigation_ecer_investigation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationCompetency>("ecer_investigationcompetency_Investigation_ecer_investigation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationhistory_InvestigationId_ecer_investigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationhistory_InvestigationId_ecer_investigation")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationHistory> ecer_investigationhistory_InvestigationId_ecer_investigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationHistory>("ecer_investigationhistory_InvestigationId_ecer_investigation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationHistory>("ecer_investigationhistory_InvestigationId_ecer_investigation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanningallegation_Investiga
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanningallegation_Investiga")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningAllegation> ecer_investigationplanningallegation_Investiga
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningAllegation>("ecer_investigationplanningallegation_Investiga", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningAllegation>("ecer_investigationplanningallegation_Investiga", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanningcontactsforcollabora
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanningcontactsforcollabora")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningContactsforCollaborative> ecer_investigationplanningcontactsforcollabora
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningContactsforCollaborative>("ecer_investigationplanningcontactsforcollabora", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningContactsforCollaborative>("ecer_investigationplanningcontactsforcollabora", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanningcorefactualissue_Inv
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanningcorefactualissue_Inv")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningCoreFactualIssue> ecer_investigationplanningcorefactualissue_Inv
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningCoreFactualIssue>("ecer_investigationplanningcorefactualissue_Inv", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningCoreFactualIssue>("ecer_investigationplanningcorefactualissue_Inv", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanningdocumentationrecord_
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanningdocumentationrecord_")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningDocumentationRecord> ecer_investigationplanningdocumentationrecord_
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningDocumentationRecord>("ecer_investigationplanningdocumentationrecord_", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningDocumentationRecord>("ecer_investigationplanningdocumentationrecord_", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanninginterview_Investigat
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanninginterview_Investigat")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInterview> ecer_investigationplanninginterview_Investigat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInterview>("ecer_investigationplanninginterview_Investigat", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInterview>("ecer_investigationplanninginterview_Investigat", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanninginvolvedperson_Inves
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanninginvolvedperson_Inves")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInvolvedPerson> ecer_investigationplanninginvolvedperson_Inves
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInvolvedPerson>("ecer_investigationplanninginvolvedperson_Inves", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningInvolvedPerson>("ecer_investigationplanninginvolvedperson_Inves", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_investigationplanningriskconsideration_In
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigationplanningriskconsideration_In")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningRiskConsideration> ecer_investigationplanningriskconsideration_In
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningRiskConsideration>("ecer_investigationplanningriskconsideration_In", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationPlanningRiskConsideration>("ecer_investigationplanningriskconsideration_In", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_involvedperson_Investigation_ecer_investi
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_involvedperson_Investigation_ecer_investi")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvolvedPerson> ecer_involvedperson_Investigation_ecer_investi
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvolvedPerson>("ecer_involvedperson_Investigation_ecer_investi", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvolvedPerson>("ecer_involvedperson_Investigation_ecer_investi", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ecer_parallelprocesscommunicationinvestigation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_parallelprocesscommunicationinvestigation")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationParallelProcessCommunication> ecer_parallelprocesscommunicationinvestigation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationParallelProcessCommunication>("ecer_parallelprocesscommunicationinvestigation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_InvestigationParallelProcessCommunication>("ecer_parallelprocesscommunicationinvestigation", null, value);
			}
		}
		
		/// <summary>
		/// N:N ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies")]
		public System.Collections.Generic.IEnumerable<ECER.Utilities.DataverseSdk.Model.ecer_CompetencyCompetencies> ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_CompetencyCompetencies>("ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntities<ECER.Utilities.DataverseSdk.Model.ecer_CompetencyCompetencies>("ecer_Investigation_ecer_CompetencyCompetencies_ecer_CompetencyCompetencies", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_contact_ecer_investigation_Applicant
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_applicant")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_contact_ecer_investigation_Applicant")]
		public ECER.Utilities.DataverseSdk.Model.Contact ecer_contact_ecer_investigation_Applicant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.Contact>("ecer_contact_ecer_investigation_Applicant", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.Contact>("ecer_contact_ecer_investigation_Applicant", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_ecer_application_ecer_investigation_OpenApplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_openapplication")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_application_ecer_investigation_OpenApplication")]
		public ECER.Utilities.DataverseSdk.Model.ecer_Application ecer_ecer_application_ecer_investigation_OpenApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Application>("ecer_ecer_application_ecer_investigation_OpenApplication", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Application>("ecer_ecer_application_ecer_investigation_OpenApplication", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_ecer_certificate_ecer_investigation_CurrentCertificate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_currentcertificate")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_certificate_ecer_investigation_CurrentCertificate")]
		public ECER.Utilities.DataverseSdk.Model.ecer_Certificate ecer_ecer_certificate_ecer_investigation_CurrentCertificate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Certificate>("ecer_ecer_certificate_ecer_investigation_CurrentCertificate", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Certificate>("ecer_ecer_certificate_ecer_investigation_CurrentCertificate", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_ecer_complainant_ecer_investigation_complainant_lookup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_complainant_lookup")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_complainant_ecer_investigation_complainant_lookup")]
		public ECER.Utilities.DataverseSdk.Model.ecer_complainant ecer_ecer_complainant_ecer_investigation_complainant_lookup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_complainant>("ecer_ecer_complainant_ecer_investigation_complainant_lookup", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_complainant>("ecer_ecer_complainant_ecer_investigation_complainant_lookup", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_ecer_investigation_health_authorities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_health_authorities")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_investigation_health_authorities")]
		public ECER.Utilities.DataverseSdk.Model.ecer_health_authorities ecer_ecer_investigation_health_authorities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_health_authorities>("ecer_ecer_investigation_health_authorities", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_health_authorities>("ecer_ecer_investigation_health_authorities", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_ecer_investigation_licensing_officers
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_licensing_officers")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_ecer_investigation_licensing_officers")]
		public ECER.Utilities.DataverseSdk.Model.ecer_licensing_officers ecer_ecer_investigation_licensing_officers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_licensing_officers>("ecer_ecer_investigation_licensing_officers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_licensing_officers>("ecer_ecer_investigation_licensing_officers", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_investigation_CharacterReferenceId_ecer_c
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_characterreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigation_CharacterReferenceId_ecer_c")]
		public ECER.Utilities.DataverseSdk.Model.ecer_CharacterReference ecer_investigation_CharacterReferenceId_ecer_c
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_CharacterReference>("ecer_investigation_CharacterReferenceId_ecer_c", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_CharacterReference>("ecer_investigation_CharacterReferenceId_ecer_c", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_investigation_primaryid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_primaryid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public ECER.Utilities.DataverseSdk.Model.ecer_Investigation Referencingecer_investigation_primaryid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Investigation>("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_Investigation>("ecer_investigation_primaryid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 ecer_investigation_WorkExperienceReferenceId_e
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ecer_workexperiencereferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ecer_investigation_WorkExperienceReferenceId_e")]
		public ECER.Utilities.DataverseSdk.Model.ecer_WorkExperienceRef ecer_investigation_WorkExperienceReferenceId_e
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_WorkExperienceRef>("ecer_investigation_WorkExperienceReferenceId_e", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.SetRelatedEntity<ECER.Utilities.DataverseSdk.Model.ecer_WorkExperienceRef>("ecer_investigation_WorkExperienceReferenceId_e", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public ecer_Investigation(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ecer_investigationid"] = base.Id;
                        break;
                    case "ecer_investigationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
